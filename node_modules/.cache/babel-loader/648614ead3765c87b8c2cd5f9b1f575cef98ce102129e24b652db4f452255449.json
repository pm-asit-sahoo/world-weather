{"ast":null,"code":"var _jsxFileName = \"/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\nconst GlobalTemperatureMap = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const mapRef = useRef(null);\n\n  // Function to fetch weather data for a specific location using real OpenWeatherMap API\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // OpenWeatherMap API key\n      const apiKey = '4d8fb5b93d4af21d66a2948710284366'; // Free API key for demo purposes\n\n      // Fetch current weather data\n      const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n\n      // Process the current weather data\n      const currentWeather = weatherResponse.data;\n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: cityName || currentWeather.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: currentWeather.main.temp,\n          feelsLike: currentWeather.main.feels_like,\n          humidity: currentWeather.main.humidity,\n          pressure: currentWeather.main.pressure,\n          description: currentWeather.weather[0].description,\n          icon: currentWeather.weather[0].icon\n        },\n        wind: {\n          speed: currentWeather.wind.speed,\n          direction: currentWeather.wind.deg\n        },\n        timestamp: new Date().toISOString()\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      alert('Error fetching real-time weather data. Please try again later.');\n      return null;\n    }\n  };\n\n  // Function to format date\n  const formatDate = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = degrees => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to handle search for places using real geocoding API\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    setError(null);\n    try {\n      // Use OpenStreetMap Nominatim API for geocoding\n      const results = await geocodeLocation(searchQuery);\n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n      setIsSearching(false);\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n      setIsSearching(false);\n    }\n  };\n\n  // Real geocoding function using OpenStreetMap Nominatim API\n  const geocodeLocation = async query => {\n    try {\n      // Call the OpenStreetMap Nominatim API\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=5`, {\n        headers: {\n          'User-Agent': 'ClimateChangeApp/1.0' // Required by Nominatim usage policy\n        }\n      });\n\n      // Process and format the results\n      return response.data.map(place => ({\n        id: place.place_id,\n        name: place.name || extractLocationName(place.display_name),\n        country: extractCountry(place.display_name),\n        lat: parseFloat(place.lat),\n        lng: parseFloat(place.lon),\n        display_name: place.display_name\n      }));\n    } catch (error) {\n      console.error('Geocoding error:', error);\n      throw new Error('Failed to search for location');\n    }\n  };\n\n  // Helper function to extract location name from display_name\n  const extractLocationName = displayName => {\n    if (!displayName) return 'Unknown Location';\n    const parts = displayName.split(',');\n    return parts[0].trim();\n  };\n\n  // Helper function to extract country from display_name\n  const extractCountry = displayName => {\n    if (!displayName) return '';\n    const parts = displayName.split(',');\n    return parts[parts.length - 1].trim();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-temperature-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Global Temperature Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for any city, town, district, or place...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-button\",\n          disabled: isSearching,\n          children: isSearching ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-item\",\n          onClick: async () => {\n            // Clear search results\n            setSearchResults([]);\n            setSearchQuery('');\n\n            // Center map on selected location\n            if (mapRef.current) {\n              mapRef.current.setView([result.lat, result.lng], 10);\n            }\n\n            // Fetch weather for the selected location\n            setLoading(true);\n            try {\n              const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n              if (weatherData) {\n                setSelectedCity(weatherData);\n              }\n              setLoading(false);\n            } catch (err) {\n              console.error('Error fetching weather data for search result:', err);\n              setError('Failed to load weather data for this location');\n              setLoading(false);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-name\",\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-location\",\n            children: result.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"map-instructions\",\n      children: \"Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 2,\n        minZoom: 2,\n        maxBounds: [[-90, -180], [90, 180]],\n        scrollWheelZoom: true,\n        className: \"globe-map-container\",\n        ref: mapRef,\n        worldCopyJump: true,\n        children: /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-city-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Location: \", selectedCity.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature-large\",\n            children: [Math.round(selectedCity.weather.temperature), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feels-like\",\n              children: [\"Feels like: \", Math.round(selectedCity.weather.feelsLike), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-icon-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`,\n              alt: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-conditions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-details-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83C\\uDF21\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.pressure, \" hPa\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.wind.speed.toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83E\\uDDED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Direction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: getWindDirection(selectedCity.wind.direction)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Coordinates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.location.lat.toFixed(4), \", \", selectedCity.location.lng.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDD52\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: formatDate(selectedCity.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Temperature Scale (\\xB0C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-gradient\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"0\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"30\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"40\\xB0+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalTemperatureMap, \"KKAdvKSsNKqgeplHq6M2FA2/DkE=\");\n_c = GlobalTemperatureMap;\nexport default GlobalTemperatureMap;\nvar _c;\n$RefreshReg$(_c, \"GlobalTemperatureMap\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MapContainer","TileLayer","Marker","Popup","L","axios","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","GlobalTemperatureMap","_s","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","error","setError","loading","setLoading","selectedCity","setSelectedCity","mapRef","fetchWeatherForLocation","lat","lng","cityName","apiKey","weatherResponse","get","currentWeather","data","id","Date","now","Math","random","location","name","weather","temperature","main","temp","feelsLike","feels_like","humidity","pressure","description","icon","wind","speed","direction","deg","timestamp","toISOString","err","console","alert","formatDate","isoString","date","toLocaleString","getWindDirection","degrees","directions","index","round","handleSearch","e","preventDefault","trim","results","geocodeLocation","length","query","response","encodeURIComponent","headers","map","place","place_id","extractLocationName","display_name","country","extractCountry","parseFloat","lon","Error","displayName","parts","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","result","onClick","current","setView","weatherData","center","zoom","minZoom","maxBounds","scrollWheelZoom","ref","worldCopyJump","attribution","url","src","alt","toFixed","_c","$RefreshReg$"],"sources":["/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\nconst GlobalTemperatureMap = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const mapRef = useRef(null);\n  \n  // Function to fetch weather data for a specific location using real OpenWeatherMap API\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // OpenWeatherMap API key\n      const apiKey = '4d8fb5b93d4af21d66a2948710284366'; // Free API key for demo purposes\n      \n      // Fetch current weather data\n      const weatherResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`\n      );\n      \n      // Process the current weather data\n      const currentWeather = weatherResponse.data;\n      \n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: cityName || currentWeather.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: currentWeather.main.temp,\n          feelsLike: currentWeather.main.feels_like,\n          humidity: currentWeather.main.humidity,\n          pressure: currentWeather.main.pressure,\n          description: currentWeather.weather[0].description,\n          icon: currentWeather.weather[0].icon\n        },\n        wind: {\n          speed: currentWeather.wind.speed,\n          direction: currentWeather.wind.deg\n        },\n        timestamp: new Date().toISOString()\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      alert('Error fetching real-time weather data. Please try again later.');\n      return null;\n    }\n  };\n  \n  // Function to format date\n  const formatDate = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n  \n  // Function to get wind direction as text\n  const getWindDirection = (degrees) => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n  \n  // Function to handle search for places using real geocoding API\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    \n    setIsSearching(true);\n    setError(null);\n    \n    try {\n      // Use OpenStreetMap Nominatim API for geocoding\n      const results = await geocodeLocation(searchQuery);\n      \n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n      \n      setIsSearching(false);\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n      setIsSearching(false);\n    }\n  };\n  \n  // Real geocoding function using OpenStreetMap Nominatim API\n  const geocodeLocation = async (query) => {\n    try {\n      // Call the OpenStreetMap Nominatim API\n      const response = await axios.get(\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=5`,\n        {\n          headers: {\n            'User-Agent': 'ClimateChangeApp/1.0' // Required by Nominatim usage policy\n          }\n        }\n      );\n      \n      // Process and format the results\n      return response.data.map(place => ({\n        id: place.place_id,\n        name: place.name || extractLocationName(place.display_name),\n        country: extractCountry(place.display_name),\n        lat: parseFloat(place.lat),\n        lng: parseFloat(place.lon),\n        display_name: place.display_name\n      }));\n    } catch (error) {\n      console.error('Geocoding error:', error);\n      throw new Error('Failed to search for location');\n    }\n  };\n  \n  // Helper function to extract location name from display_name\n  const extractLocationName = (displayName) => {\n    if (!displayName) return 'Unknown Location';\n    const parts = displayName.split(',');\n    return parts[0].trim();\n  };\n  \n  // Helper function to extract country from display_name\n  const extractCountry = (displayName) => {\n    if (!displayName) return '';\n    const parts = displayName.split(',');\n    return parts[parts.length - 1].trim();\n  };\n  return (\n    <div className=\"global-temperature-map\">\n      <h2>Global Temperature Map</h2>\n      \n      <div className=\"search-container\">\n        <form onSubmit={handleSearch}>\n          <input\n            type=\"text\"\n            placeholder=\"Search for any city, town, district, or place...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-button\" disabled={isSearching}>\n            {isSearching ? 'Searching...' : 'Search'}\n          </button>\n        </form>\n        \n        {searchResults.length > 0 && (\n          <div className=\"search-results\">\n            {searchResults.map(result => (\n              <div \n                key={result.id} \n                className=\"search-result-item\"\n                onClick={async () => {\n                  // Clear search results\n                  setSearchResults([]);\n                  setSearchQuery('');\n                  \n                  // Center map on selected location\n                  if (mapRef.current) {\n                    mapRef.current.setView([result.lat, result.lng], 10);\n                  }\n                  \n                  // Fetch weather for the selected location\n                  setLoading(true);\n                  try {\n                    const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n                    if (weatherData) {\n                      setSelectedCity(weatherData);\n                    }\n                    setLoading(false);\n                  } catch (err) {\n                    console.error('Error fetching weather data for search result:', err);\n                    setError('Failed to load weather data for this location');\n                    setLoading(false);\n                  }\n                }}\n              >\n                <div className=\"result-name\">{result.name}</div>\n                <div className=\"result-location\">{result.display_name}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <p className=\"map-instructions\">\n        Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\n      </p>\n      \n      <div className=\"map-container-wrapper\">\n        <MapContainer\n          center={[20, 0]}\n          zoom={2}\n          minZoom={2}\n          maxBounds={[[-90, -180], [90, 180]]}\n          scrollWheelZoom={true}\n          className=\"globe-map-container\"\n          ref={mapRef}\n          worldCopyJump={true}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n        </MapContainer>\n      </div>\n      \n      {loading && (\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p>Loading weather data...</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {selectedCity && (\n        <div className=\"selected-city-details\">\n          <h3>Selected Location: {selectedCity.location.name}</h3>\n          <div className=\"weather-card\">\n            <div className=\"weather-header\">\n              <div className=\"temperature-large\">\n                {Math.round(selectedCity.weather.temperature)}°C\n                <span className=\"feels-like\">Feels like: {Math.round(selectedCity.weather.feelsLike)}°C</span>\n              </div>\n              <div className=\"weather-icon-large\">\n                <img \n                  src={`https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`} \n                  alt={selectedCity.weather.description}\n                />\n                <span>{selectedCity.weather.description}</span>\n              </div>\n            </div>\n            \n            <div className=\"current-conditions\">\n              <h4>Current Conditions</h4>\n              <div className=\"weather-details-grid\">\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">💧</span>\n                  <span className=\"detail-label\">Humidity</span>\n                  <span className=\"detail-value\">{selectedCity.weather.humidity}%</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">🌡️</span>\n                  <span className=\"detail-label\">Pressure</span>\n                  <span className=\"detail-value\">{selectedCity.weather.pressure} hPa</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">💨</span>\n                  <span className=\"detail-label\">Wind Speed</span>\n                  <span className=\"detail-value\">{selectedCity.wind.speed.toFixed(1)} m/s</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">🧭</span>\n                  <span className=\"detail-label\">Wind Direction</span>\n                  <span className=\"detail-value\">{getWindDirection(selectedCity.wind.direction)}</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">📍</span>\n                  <span className=\"detail-label\">Coordinates</span>\n                  <span className=\"detail-value\">\n                    {selectedCity.location.lat.toFixed(4)}, {selectedCity.location.lng.toFixed(4)}\n                  </span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">🕒</span>\n                  <span className=\"detail-label\">Updated</span>\n                  <span className=\"detail-value\">{formatDate(selectedCity.timestamp)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"temperature-legend\">\n        <h4>Temperature Scale (°C)</h4>\n        <div className=\"legend-gradient\">\n          <div className=\"gradient-bar\"></div>\n          <div className=\"gradient-labels\">\n            <span>-10°</span>\n            <span>0°</span>\n            <span>10°</span>\n            <span>20°</span>\n            <span>30°</span>\n            <span>40°+</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalTemperatureMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}