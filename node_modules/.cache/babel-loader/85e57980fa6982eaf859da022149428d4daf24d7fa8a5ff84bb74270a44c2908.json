{"ast":null,"code":"var _jsxFileName = \"/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons in React\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = temperature => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({\n  onMapClick\n}) => {\n  _s();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n_s(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = MapClickHandler;\nconst GlobalTemperatureMap = ({\n  embedded = false\n}) => {\n  _s2();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [highlightedLocation, setHighlightedLocation] = useState(null);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [{\n    name: 'New York',\n    lat: 40.7128,\n    lng: -74.0060\n  }, {\n    name: 'London',\n    lat: 51.5074,\n    lng: -0.1278\n  }, {\n    name: 'Tokyo',\n    lat: 35.6762,\n    lng: 139.6503\n  }, {\n    name: 'Sydney',\n    lat: -33.8688,\n    lng: 151.2093\n  }, {\n    name: 'Cairo',\n    lat: 30.0444,\n    lng: 31.2357\n  }, {\n    name: 'Rio de Janeiro',\n    lat: -22.9068,\n    lng: -43.1729\n  }];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => fetchWeatherForLocation(city.lat, city.lng, city.name));\n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location using real OpenWeatherMap API\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // OpenWeatherMap API key - for demo purposes only\n      // In production, this should be stored securely\n      const apiKey = '4d8fb5b93d4af21d66a2948710284366';\n      try {\n        var _currentWeather$cloud;\n        // Fetch current weather data\n        const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n\n        // Process the current weather data\n        const currentWeather = weatherResponse.data;\n        return {\n          id: Date.now() + Math.random(),\n          location: {\n            name: cityName || currentWeather.name,\n            lat: lat,\n            lng: lng\n          },\n          weather: {\n            temperature: currentWeather.main.temp,\n            feelsLike: currentWeather.main.feels_like,\n            humidity: currentWeather.main.humidity,\n            pressure: currentWeather.main.pressure,\n            description: currentWeather.weather[0].description,\n            icon: currentWeather.weather[0].icon,\n            cloudiness: (_currentWeather$cloud = currentWeather.clouds) === null || _currentWeather$cloud === void 0 ? void 0 : _currentWeather$cloud.all,\n            visibility: currentWeather.visibility\n          },\n          wind: {\n            speed: currentWeather.wind.speed,\n            direction: currentWeather.wind.deg,\n            gust: currentWeather.wind.gust\n          },\n          sun: {\n            sunrise: new Date(currentWeather.sys.sunrise * 1000).toISOString(),\n            sunset: new Date(currentWeather.sys.sunset * 1000).toISOString()\n          },\n          timestamp: new Date().toISOString()\n        };\n      } catch (apiError) {\n        console.log('API request failed, using fallback data:', apiError);\n\n        // Generate fallback data based on location and current season\n        // This is useful for demo purposes or when the API is unavailable\n        const baseTemp = getBaseTemperatureForLocation(lat);\n        const currentDate = new Date();\n        const isDay = currentDate.getHours() > 6 && currentDate.getHours() < 18;\n        return {\n          id: Date.now() + Math.random(),\n          location: {\n            name: cityName || `Location (${lat.toFixed(2)}, ${lng.toFixed(2)})`,\n            lat: lat,\n            lng: lng\n          },\n          weather: {\n            temperature: baseTemp + (Math.random() * 6 - 3),\n            // Add some randomness\n            feelsLike: baseTemp + (Math.random() * 4 - 2),\n            humidity: 40 + Math.floor(Math.random() * 40),\n            pressure: 1000 + Math.floor(Math.random() * 30),\n            description: getWeatherDescription(baseTemp),\n            icon: getWeatherIcon(baseTemp, isDay),\n            cloudiness: Math.floor(Math.random() * 100),\n            visibility: 8000 + Math.floor(Math.random() * 2000)\n          },\n          wind: {\n            speed: 2 + Math.random() * 8,\n            direction: Math.floor(Math.random() * 360),\n            gust: 3 + Math.random() * 10\n          },\n          sun: {\n            sunrise: new Date(currentDate.setHours(6, 0, 0, 0)).toISOString(),\n            sunset: new Date(currentDate.setHours(18, 0, 0, 0)).toISOString()\n          },\n          timestamp: new Date().toISOString()\n        };\n      }\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to fetch weather data. Please try again later.');\n      return null;\n    }\n  };\n\n  // Helper function to get base temperature based on latitude and season\n  const getBaseTemperatureForLocation = lat => {\n    // Get current month (0-11)\n    const currentMonth = new Date().getMonth();\n\n    // Northern hemisphere summer / Southern hemisphere winter\n    const isSummerNorth = currentMonth >= 4 && currentMonth <= 8;\n\n    // Calculate base temperature based on latitude and season\n    const equatorTemp = 30; // Base temperature at equator\n    const poleTemp = isSummerNorth ? -10 : -30; // Base temperature at poles\n\n    // Adjust for hemisphere and season\n    const absLat = Math.abs(lat);\n    const latFactor = absLat / 90;\n    if (lat >= 0 && isSummerNorth || lat < 0 && !isSummerNorth) {\n      // Summer in this hemisphere\n      return equatorTemp - latFactor * (equatorTemp - poleTemp + 15);\n    } else {\n      // Winter in this hemisphere\n      return equatorTemp - latFactor * (equatorTemp - poleTemp);\n    }\n  };\n\n  // Helper function to get weather description based on temperature\n  const getWeatherDescription = temp => {\n    if (temp < -10) return 'extreme cold';\n    if (temp < 0) return 'freezing';\n    if (temp < 5) return 'very cold';\n    if (temp < 10) return 'cold';\n    if (temp < 15) return 'cool';\n    if (temp < 20) return 'mild';\n    if (temp < 25) return 'warm';\n    if (temp < 30) return 'hot';\n    return 'very hot';\n  };\n\n  // Helper function to get weather icon based on temperature and time\n  const getWeatherIcon = (temp, isDay) => {\n    const dayNight = isDay ? 'd' : 'n';\n    if (temp < 0) return `13${dayNight}`; // Snow\n    if (temp < 10) return `03${dayNight}`; // Scattered clouds\n    if (temp < 20) return `02${dayNight}`; // Few clouds\n    if (temp < 30) return `01${dayNight}`; // Clear sky\n    return `01${dayNight}`; // Clear sky for hot weather\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n\n        // Set the highlighted location when clicking on the map\n        setHighlightedLocation({\n          lat: lat,\n          lng: lng,\n          name: newWeatherData.location.name\n        });\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = degrees => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = temp => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n\n  // Function to handle search for places using geocoding API\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    setError(null);\n    try {\n      // Use geocoding function\n      const results = await geocodeLocation(searchQuery);\n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  // Geocoding function with hardcoded locations for reliability\n  const geocodeLocation = async query => {\n    // Hardcoded locations for common searches\n    const commonLocations = {\n      'new york': {\n        lat: 40.7128,\n        lng: -74.0060,\n        name: 'New York',\n        country: 'United States'\n      },\n      'london': {\n        lat: 51.5074,\n        lng: -0.1278,\n        name: 'London',\n        country: 'United Kingdom'\n      },\n      'tokyo': {\n        lat: 35.6762,\n        lng: 139.6503,\n        name: 'Tokyo',\n        country: 'Japan'\n      },\n      'paris': {\n        lat: 48.8566,\n        lng: 2.3522,\n        name: 'Paris',\n        country: 'France'\n      },\n      'sydney': {\n        lat: -33.8688,\n        lng: 151.2093,\n        name: 'Sydney',\n        country: 'Australia'\n      },\n      'delhi': {\n        lat: 28.7041,\n        lng: 77.1025,\n        name: 'Delhi',\n        country: 'India'\n      },\n      'mumbai': {\n        lat: 19.0760,\n        lng: 72.8777,\n        name: 'Mumbai',\n        country: 'India'\n      },\n      'pune': {\n        lat: 18.5204,\n        lng: 73.8567,\n        name: 'Pune',\n        country: 'India'\n      },\n      'bangalore': {\n        lat: 12.9716,\n        lng: 77.5946,\n        name: 'Bangalore',\n        country: 'India'\n      },\n      'chennai': {\n        lat: 13.0827,\n        lng: 80.2707,\n        name: 'Chennai',\n        country: 'India'\n      }\n    };\n\n    // Check if the query matches any common location\n    const normalizedQuery = query.toLowerCase().trim();\n    for (const [key, location] of Object.entries(commonLocations)) {\n      if (normalizedQuery.includes(key)) {\n        return [{\n          id: Date.now(),\n          name: location.name,\n          country: location.country,\n          lat: location.lat,\n          lng: location.lng,\n          display_name: `${location.name}, ${location.country}`\n        }];\n      }\n    }\n\n    // If no match in hardcoded locations, try API\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=5`, {\n        headers: {\n          'User-Agent': 'ClimateChangeApp/1.0'\n        }\n      });\n      if (response.data && response.data.length > 0) {\n        return response.data.map(place => ({\n          id: place.place_id || Date.now(),\n          name: place.name || extractLocationName(place.display_name),\n          country: extractCountry(place.display_name),\n          lat: parseFloat(place.lat),\n          lng: parseFloat(place.lon),\n          display_name: place.display_name\n        }));\n      }\n\n      // If API returns no results\n      return [];\n    } catch (error) {\n      console.error('Geocoding API error:', error);\n      // For demo purposes, return an empty array instead of throwing\n      return [];\n    }\n  };\n\n  // Helper function to extract location name from display_name\n  const extractLocationName = displayName => {\n    if (!displayName) return 'Unknown Location';\n    const parts = displayName.split(',');\n    return parts[0].trim();\n  };\n\n  // Helper function to extract country from display_name\n  const extractCountry = displayName => {\n    if (!displayName) return '';\n    const parts = displayName.split(',');\n    return parts[parts.length - 1].trim();\n  };\n\n  // Function to select a search result\n  const selectSearchResult = async result => {\n    setSearchResults([]);\n    setSearchQuery('');\n\n    // Set the highlighted location\n    setHighlightedLocation({\n      lat: result.lat,\n      lng: result.lng,\n      name: result.name\n    });\n\n    // Center map on selected location\n    if (mapRef.current) {\n      mapRef.current.setView([result.lat, result.lng], 10);\n    }\n\n    // Fetch weather for the selected location\n    setLoading(true);\n    try {\n      const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n      if (weatherData) {\n        setWeatherData(prevData => {\n          // Check if we already have weather data for this location\n          const existingIndex = prevData.findIndex(item => Math.abs(item.location.lat - result.lat) < 0.01 && Math.abs(item.location.lng - result.lng) < 0.01);\n          if (existingIndex >= 0) {\n            // Update existing data\n            const updatedData = [...prevData];\n            updatedData[existingIndex] = weatherData;\n            return updatedData;\n          } else {\n            // Add new data\n            return [...prevData, weatherData];\n          }\n        });\n        setSelectedCity(weatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data for search result:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: embedded ? \"global-temperature-embedded\" : \"global-temperature-page\",\n    children: [!embedded && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Global Temperature Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 21\n    }, this), !embedded && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search for a location...\",\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"search-button\",\n        disabled: isSearching,\n        children: isSearching ? 'Searching...' : 'Search'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }, this), searchResults.length > 0 && !embedded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selectSearchResult(result),\n          children: [result.name, \", \", result.country]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 9\n    }, this), error && !embedded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 9\n    }, this), !embedded && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"map-instructions\",\n      children: \"Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: embedded ? 1 : 2,\n        minZoom: 1,\n        maxBounds: [[-90, -180], [90, 180]],\n        scrollWheelZoom: true,\n        className: \"globe-map-container\",\n        ref: mapRef,\n        worldCopyJump: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n          onMapClick: handleMapClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), highlightedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {\n            center: [highlightedLocation.lat, highlightedLocation.lng],\n            radius: 30000,\n            pathOptions: {\n              color: '#ff4500',\n              fillColor: '#ff4500',\n              fillOpacity: 0.3,\n              weight: 2\n            },\n            className: \"pulsing-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: [highlightedLocation.lat, highlightedLocation.lng],\n            radius: 60000,\n            pathOptions: {\n              color: '#ff4500',\n              fillColor: '#ff4500',\n              fillOpacity: 0.1,\n              weight: 1\n            },\n            className: \"pulsing-circle-outer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [highlightedLocation.lat, highlightedLocation.lng],\n            icon: L.divIcon({\n              className: 'highlighted-marker',\n              html: `<div class=\"highlighted-marker-inner\"><span class=\"marker-label\">${highlightedLocation.name}</span></div>`,\n              iconSize: [40, 40],\n              iconAnchor: [20, 20]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 13\n        }, this), weatherData.map(data => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {\n            center: [data.location.lat, data.location.lng],\n            radius: 50000,\n            pathOptions: {\n              fillColor: getTemperatureColor(data.weather.temperature),\n              fillOpacity: 0.5,\n              color: getTemperatureColor(data.weather.temperature),\n              weight: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [data.location.lat, data.location.lng],\n            icon: getTemperatureIcon(data.weather.temperature),\n            eventHandlers: {\n              click: () => {\n                setSelectedCity(data);\n\n                // Also highlight the location when clicked\n                setHighlightedLocation({\n                  lat: data.location.lat,\n                  lng: data.location.lng,\n                  name: data.location.name\n                });\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-popup\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: data.location.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-main\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"temperature\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"temp-value\",\n                      children: [Math.round(data.weather.temperature), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 556,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"feels-like\",\n                      children: [\"Feels like: \", Math.round(data.weather.feelsLike), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"weather-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`,\n                      alt: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 564,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 554,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Humidity:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 569,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.weather.humidity, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Wind:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.wind.speed.toFixed(1), \" m/s \", getWindDirection(data.wind.direction)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 574,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 9\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-city-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Location: \", selectedCity.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature-large\",\n            children: [Math.round(selectedCity.weather.temperature), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feels-like\",\n              children: [\"Feels like: \", Math.round(selectedCity.weather.feelsLike), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-icon-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`,\n              alt: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-conditions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-details-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83C\\uDF21\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 627,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.pressure, \" hPa\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.wind.speed.toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 634,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83E\\uDDED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Direction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: getWindDirection(selectedCity.wind.direction)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this), selectedCity.wind.gust && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Gusts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.wind.gust.toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 19\n            }, this), selectedCity.weather.cloudiness !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\u2601\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Cloudiness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.cloudiness, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 19\n            }, this), selectedCity.weather.visibility !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDC41\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Visibility\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: selectedCity.weather.visibility >= 10000 ? '10+ km' : `${(selectedCity.weather.visibility / 1000).toFixed(1)} km`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 19\n            }, this), selectedCity.sun && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-icon\",\n                  children: \"\\uD83C\\uDF05\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Sunrise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: new Date(selectedCity.sun.sunrise).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-icon\",\n                  children: \"\\uD83C\\uDF07\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Sunset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: new Date(selectedCity.sun.sunset).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Coordinates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.location.lat.toFixed(4), \", \", selectedCity.location.lng.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDD52\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: formatDate(selectedCity.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Temperature Scale (\\xB0C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-gradient\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"0\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"30\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"40\\xB0+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"climate-change-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Climate Change Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"climate-insights-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"climate-insight-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-icon\",\n            children: \"\\uD83C\\uDF21\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Global Temperature Rise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Earth's average temperature has increased by 1.1\\xB0C since the pre-industrial era. Without action, we're headed for a 3-4\\xB0C rise by 2100.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-stat\",\n            children: \"+1.1\\xB0C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"climate-insight-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-icon\",\n            children: \"\\uD83C\\uDF0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sea Level Rise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Global sea levels have risen about 8-9 inches since 1880, with the rate accelerating to 3.7mm per year in recent decades.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-stat\",\n            children: \"+3.7mm/year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"climate-insight-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-icon\",\n            children: \"\\u2744\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Arctic Ice Loss\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The Arctic is losing 13.1% of its ice per decade. Summer Arctic sea ice could disappear completely by 2050.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-stat\",\n            children: \"-13.1%/decade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"climate-insight-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-icon\",\n            children: \"\\uD83C\\uDF2A\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Extreme Weather\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Climate change is increasing the frequency and intensity of extreme weather events like hurricanes, droughts, and wildfires.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"insight-stat\",\n            children: \"+20% since 1980\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"climate-action-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"What Can We Do?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"climate-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-icon\",\n              children: \"\\uD83D\\uDD04\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this), \" Transition to renewable energy sources\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-icon\",\n              children: \"\\uD83C\\uDF31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 17\n            }, this), \" Support reforestation and conservation efforts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-icon\",\n              children: \"\\uD83D\\uDE97\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this), \" Reduce carbon footprint through sustainable transportation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-icon\",\n              children: \"\\uD83C\\uDF7D\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), \" Choose plant-based meals and reduce food waste\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n};\n_s2(GlobalTemperatureMap, \"To5E187SotAGZRRnofVPBc/sEu0=\");\n_c2 = GlobalTemperatureMap;\nexport default GlobalTemperatureMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapClickHandler\");\n$RefreshReg$(_c2, \"GlobalTemperatureMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","useMapEvents","Marker","Popup","Circle","L","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","getTemperatureIcon","temperature","color","divIcon","className","html","Math","round","iconSize","iconAnchor","popupAnchor","MapClickHandler","onMapClick","_s","click","e","lat","lng","latlng","_c","GlobalTemperatureMap","embedded","_s2","weatherData","setWeatherData","loading","setLoading","error","setError","selectedCity","setSelectedCity","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","highlightedLocation","setHighlightedLocation","mapRef","majorCities","name","fetchInitialWeatherData","promises","map","city","fetchWeatherForLocation","results","Promise","all","filter","data","err","console","cityName","apiKey","_currentWeather$cloud","weatherResponse","get","currentWeather","id","Date","now","random","location","weather","main","temp","feelsLike","feels_like","humidity","pressure","description","icon","cloudiness","clouds","visibility","wind","speed","direction","deg","gust","sun","sunrise","sys","toISOString","sunset","timestamp","apiError","log","baseTemp","getBaseTemperatureForLocation","currentDate","isDay","getHours","toFixed","floor","getWeatherDescription","getWeatherIcon","setHours","currentMonth","getMonth","isSummerNorth","equatorTemp","poleTemp","absLat","abs","latFactor","dayNight","handleMapClick","newWeatherData","prevData","getWindDirection","degrees","directions","index","formatDate","isoString","date","toLocaleString","getTemperatureColor","handleSearch","preventDefault","trim","geocodeLocation","length","query","commonLocations","country","normalizedQuery","toLowerCase","key","Object","entries","includes","display_name","response","encodeURIComponent","headers","place","place_id","extractLocationName","extractCountry","parseFloat","lon","displayName","parts","split","selectSearchResult","result","current","setView","existingIndex","findIndex","item","updatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","disabled","onClick","center","zoom","minZoom","maxBounds","scrollWheelZoom","ref","worldCopyJump","attribution","url","radius","pathOptions","fillColor","fillOpacity","weight","position","eventHandlers","src","alt","undefined","toLocaleTimeString","hour","minute","_c2","$RefreshReg$"],"sources":["/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons in React\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = (temperature) => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({ onMapClick }) => {\n  useMapEvents({\n    click: (e) => {\n      const { lat, lng } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n\nconst GlobalTemperatureMap = ({ embedded = false }) => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [highlightedLocation, setHighlightedLocation] = useState(null);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [\n    { name: 'New York', lat: 40.7128, lng: -74.0060 },\n    { name: 'London', lat: 51.5074, lng: -0.1278 },\n    { name: 'Tokyo', lat: 35.6762, lng: 139.6503 },\n    { name: 'Sydney', lat: -33.8688, lng: 151.2093 },\n    { name: 'Cairo', lat: 30.0444, lng: 31.2357 },\n    { name: 'Rio de Janeiro', lat: -22.9068, lng: -43.1729 }\n  ];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => \n          fetchWeatherForLocation(city.lat, city.lng, city.name)\n        );\n        \n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location using real OpenWeatherMap API\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // OpenWeatherMap API key - for demo purposes only\n      // In production, this should be stored securely\n      const apiKey = '4d8fb5b93d4af21d66a2948710284366';\n      \n      try {\n        // Fetch current weather data\n        const weatherResponse = await axios.get(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`\n        );\n        \n        // Process the current weather data\n        const currentWeather = weatherResponse.data;\n        \n        return {\n          id: Date.now() + Math.random(),\n          location: {\n            name: cityName || currentWeather.name,\n            lat: lat,\n            lng: lng\n          },\n          weather: {\n            temperature: currentWeather.main.temp,\n            feelsLike: currentWeather.main.feels_like,\n            humidity: currentWeather.main.humidity,\n            pressure: currentWeather.main.pressure,\n            description: currentWeather.weather[0].description,\n            icon: currentWeather.weather[0].icon,\n            cloudiness: currentWeather.clouds?.all,\n            visibility: currentWeather.visibility\n          },\n          wind: {\n            speed: currentWeather.wind.speed,\n            direction: currentWeather.wind.deg,\n            gust: currentWeather.wind.gust\n          },\n          sun: {\n            sunrise: new Date(currentWeather.sys.sunrise * 1000).toISOString(),\n            sunset: new Date(currentWeather.sys.sunset * 1000).toISOString()\n          },\n          timestamp: new Date().toISOString()\n        };\n      } catch (apiError) {\n        console.log('API request failed, using fallback data:', apiError);\n        \n        // Generate fallback data based on location and current season\n        // This is useful for demo purposes or when the API is unavailable\n        const baseTemp = getBaseTemperatureForLocation(lat);\n        const currentDate = new Date();\n        const isDay = currentDate.getHours() > 6 && currentDate.getHours() < 18;\n        \n        return {\n          id: Date.now() + Math.random(),\n          location: {\n            name: cityName || `Location (${lat.toFixed(2)}, ${lng.toFixed(2)})`,\n            lat: lat,\n            lng: lng\n          },\n          weather: {\n            temperature: baseTemp + (Math.random() * 6 - 3), // Add some randomness\n            feelsLike: baseTemp + (Math.random() * 4 - 2),\n            humidity: 40 + Math.floor(Math.random() * 40),\n            pressure: 1000 + Math.floor(Math.random() * 30),\n            description: getWeatherDescription(baseTemp),\n            icon: getWeatherIcon(baseTemp, isDay),\n            cloudiness: Math.floor(Math.random() * 100),\n            visibility: 8000 + Math.floor(Math.random() * 2000)\n          },\n          wind: {\n            speed: 2 + Math.random() * 8,\n            direction: Math.floor(Math.random() * 360),\n            gust: 3 + Math.random() * 10\n          },\n          sun: {\n            sunrise: new Date(currentDate.setHours(6, 0, 0, 0)).toISOString(),\n            sunset: new Date(currentDate.setHours(18, 0, 0, 0)).toISOString()\n          },\n          timestamp: new Date().toISOString()\n        };\n      }\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to fetch weather data. Please try again later.');\n      return null;\n    }\n  };\n  \n  // Helper function to get base temperature based on latitude and season\n  const getBaseTemperatureForLocation = (lat) => {\n    // Get current month (0-11)\n    const currentMonth = new Date().getMonth();\n    \n    // Northern hemisphere summer / Southern hemisphere winter\n    const isSummerNorth = currentMonth >= 4 && currentMonth <= 8;\n    \n    // Calculate base temperature based on latitude and season\n    const equatorTemp = 30; // Base temperature at equator\n    const poleTemp = isSummerNorth ? -10 : -30; // Base temperature at poles\n    \n    // Adjust for hemisphere and season\n    const absLat = Math.abs(lat);\n    const latFactor = absLat / 90;\n    \n    if ((lat >= 0 && isSummerNorth) || (lat < 0 && !isSummerNorth)) {\n      // Summer in this hemisphere\n      return equatorTemp - (latFactor * (equatorTemp - poleTemp + 15));\n    } else {\n      // Winter in this hemisphere\n      return equatorTemp - (latFactor * (equatorTemp - poleTemp));\n    }\n  };\n  \n  // Helper function to get weather description based on temperature\n  const getWeatherDescription = (temp) => {\n    if (temp < -10) return 'extreme cold';\n    if (temp < 0) return 'freezing';\n    if (temp < 5) return 'very cold';\n    if (temp < 10) return 'cold';\n    if (temp < 15) return 'cool';\n    if (temp < 20) return 'mild';\n    if (temp < 25) return 'warm';\n    if (temp < 30) return 'hot';\n    return 'very hot';\n  };\n  \n  // Helper function to get weather icon based on temperature and time\n  const getWeatherIcon = (temp, isDay) => {\n    const dayNight = isDay ? 'd' : 'n';\n    if (temp < 0) return `13${dayNight}`; // Snow\n    if (temp < 10) return `03${dayNight}`; // Scattered clouds\n    if (temp < 20) return `02${dayNight}`; // Few clouds\n    if (temp < 30) return `01${dayNight}`; // Clear sky\n    return `01${dayNight}`; // Clear sky for hot weather\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n        \n        // Set the highlighted location when clicking on the map\n        setHighlightedLocation({\n          lat: lat,\n          lng: lng,\n          name: newWeatherData.location.name\n        });\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = (degrees) => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = (temp) => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n\n  // Function to handle search for places using geocoding API\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    \n    setIsSearching(true);\n    setError(null);\n    \n    try {\n      // Use geocoding function\n      const results = await geocodeLocation(searchQuery);\n      \n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  \n  // Geocoding function with hardcoded locations for reliability\n  const geocodeLocation = async (query) => {\n    // Hardcoded locations for common searches\n    const commonLocations = {\n      'new york': { lat: 40.7128, lng: -74.0060, name: 'New York', country: 'United States' },\n      'london': { lat: 51.5074, lng: -0.1278, name: 'London', country: 'United Kingdom' },\n      'tokyo': { lat: 35.6762, lng: 139.6503, name: 'Tokyo', country: 'Japan' },\n      'paris': { lat: 48.8566, lng: 2.3522, name: 'Paris', country: 'France' },\n      'sydney': { lat: -33.8688, lng: 151.2093, name: 'Sydney', country: 'Australia' },\n      'delhi': { lat: 28.7041, lng: 77.1025, name: 'Delhi', country: 'India' },\n      'mumbai': { lat: 19.0760, lng: 72.8777, name: 'Mumbai', country: 'India' },\n      'pune': { lat: 18.5204, lng: 73.8567, name: 'Pune', country: 'India' },\n      'bangalore': { lat: 12.9716, lng: 77.5946, name: 'Bangalore', country: 'India' },\n      'chennai': { lat: 13.0827, lng: 80.2707, name: 'Chennai', country: 'India' },\n    };\n    \n    // Check if the query matches any common location\n    const normalizedQuery = query.toLowerCase().trim();\n    \n    for (const [key, location] of Object.entries(commonLocations)) {\n      if (normalizedQuery.includes(key)) {\n        return [{\n          id: Date.now(),\n          name: location.name,\n          country: location.country,\n          lat: location.lat,\n          lng: location.lng,\n          display_name: `${location.name}, ${location.country}`\n        }];\n      }\n    }\n    \n    // If no match in hardcoded locations, try API\n    try {\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=5`, {\n        headers: {\n          'User-Agent': 'ClimateChangeApp/1.0'\n        }\n      });\n      \n      if (response.data && response.data.length > 0) {\n        return response.data.map(place => ({\n          id: place.place_id || Date.now(),\n          name: place.name || extractLocationName(place.display_name),\n          country: extractCountry(place.display_name),\n          lat: parseFloat(place.lat),\n          lng: parseFloat(place.lon),\n          display_name: place.display_name\n        }));\n      }\n      \n      // If API returns no results\n      return [];\n    } catch (error) {\n      console.error('Geocoding API error:', error);\n      // For demo purposes, return an empty array instead of throwing\n      return [];\n    }\n  };\n  \n  // Helper function to extract location name from display_name\n  const extractLocationName = (displayName) => {\n    if (!displayName) return 'Unknown Location';\n    const parts = displayName.split(',');\n    return parts[0].trim();\n  };\n  \n  // Helper function to extract country from display_name\n  const extractCountry = (displayName) => {\n    if (!displayName) return '';\n    const parts = displayName.split(',');\n    return parts[parts.length - 1].trim();\n  };\n  \n  // Function to select a search result\n  const selectSearchResult = async (result) => {\n    setSearchResults([]);\n    setSearchQuery('');\n    \n    // Set the highlighted location\n    setHighlightedLocation({\n      lat: result.lat,\n      lng: result.lng,\n      name: result.name\n    });\n    \n    // Center map on selected location\n    if (mapRef.current) {\n      mapRef.current.setView([result.lat, result.lng], 10);\n    }\n    \n    // Fetch weather for the selected location\n    setLoading(true);\n    try {\n      const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n      if (weatherData) {\n        setWeatherData(prevData => {\n          // Check if we already have weather data for this location\n          const existingIndex = prevData.findIndex(item => \n            Math.abs(item.location.lat - result.lat) < 0.01 && \n            Math.abs(item.location.lng - result.lng) < 0.01\n          );\n          \n          if (existingIndex >= 0) {\n            // Update existing data\n            const updatedData = [...prevData];\n            updatedData[existingIndex] = weatherData;\n            return updatedData;\n          } else {\n            // Add new data\n            return [...prevData, weatherData];\n          }\n        });\n        setSelectedCity(weatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data for search result:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={embedded ? \"global-temperature-embedded\" : \"global-temperature-page\"}>\n      {!embedded && <h2>Global Temperature Map</h2>}\n      \n      {!embedded && (\n        <form onSubmit={handleSearch} className=\"search-form\">\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"Search for a location...\"\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-button\" disabled={isSearching}>\n            {isSearching ? 'Searching...' : 'Search'}\n          </button>\n        </form>\n      )}\n      \n      {searchResults.length > 0 && !embedded && (\n        <div className=\"search-results\">\n          <h3>Search Results</h3>\n          <ul>\n            {searchResults.map(result => (\n              <li key={result.id} onClick={() => selectSearchResult(result)}>\n                {result.name}, {result.country}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      \n      {error && !embedded && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {!embedded && (\n        <p className=\"map-instructions\">\n          Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\n        </p>\n      )}\n      \n      <div className=\"map-container-wrapper\">\n        <MapContainer\n          center={[20, 0]}\n          zoom={embedded ? 1 : 2}\n          minZoom={1}\n          maxBounds={[[-90, -180], [90, 180]]}\n          scrollWheelZoom={true}\n          className=\"globe-map-container\"\n          ref={mapRef}\n          worldCopyJump={true}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          <MapClickHandler onMapClick={handleMapClick} />\n          \n          {/* Highlighted location marker with pulsing effect */}\n          {highlightedLocation && (\n            <div>\n              <Circle\n                center={[highlightedLocation.lat, highlightedLocation.lng]}\n                radius={30000}\n                pathOptions={{\n                  color: '#ff4500',\n                  fillColor: '#ff4500',\n                  fillOpacity: 0.3,\n                  weight: 2\n                }}\n                className=\"pulsing-circle\"\n              />\n              <Circle\n                center={[highlightedLocation.lat, highlightedLocation.lng]}\n                radius={60000}\n                pathOptions={{\n                  color: '#ff4500',\n                  fillColor: '#ff4500',\n                  fillOpacity: 0.1,\n                  weight: 1\n                }}\n                className=\"pulsing-circle-outer\"\n              />\n              <Marker\n                position={[highlightedLocation.lat, highlightedLocation.lng]}\n                icon={L.divIcon({\n                  className: 'highlighted-marker',\n                  html: `<div class=\"highlighted-marker-inner\"><span class=\"marker-label\">${highlightedLocation.name}</span></div>`,\n                  iconSize: [40, 40],\n                  iconAnchor: [20, 20]\n                })}\n              />\n            </div>\n          )}\n          \n          {weatherData.map((data) => (\n            <React.Fragment key={data.id}>\n              <Circle\n                center={[data.location.lat, data.location.lng]}\n                radius={50000}\n                pathOptions={{\n                  fillColor: getTemperatureColor(data.weather.temperature),\n                  fillOpacity: 0.5,\n                  color: getTemperatureColor(data.weather.temperature),\n                  weight: 1\n                }}\n              />\n              <Marker\n                position={[data.location.lat, data.location.lng]}\n                icon={getTemperatureIcon(data.weather.temperature)}\n                eventHandlers={{\n                  click: () => {\n                    setSelectedCity(data);\n                    \n                    // Also highlight the location when clicked\n                    setHighlightedLocation({\n                      lat: data.location.lat,\n                      lng: data.location.lng,\n                      name: data.location.name\n                    });\n                  }\n                }}\n              >\n                <Popup>\n                  <div className=\"weather-popup\">\n                    <h3>{data.location.name}</h3>\n                    <div className=\"weather-main\">\n                      <div className=\"temperature\">\n                        <span className=\"temp-value\">{Math.round(data.weather.temperature)}Â°C</span>\n                        <span className=\"feels-like\">Feels like: {Math.round(data.weather.feelsLike)}Â°C</span>\n                      </div>\n                      <div className=\"weather-icon\">\n                        <img \n                          src={`https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`} \n                          alt={data.weather.description}\n                        />\n                        <span>{data.weather.description}</span>\n                      </div>\n                    </div>\n                    <div className=\"weather-details\">\n                      <div className=\"detail\">\n                        <span className=\"label\">Humidity:</span>\n                        <span className=\"value\">{data.weather.humidity}%</span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Wind:</span>\n                        <span className=\"value\">\n                          {data.wind.speed.toFixed(1)} m/s {getWindDirection(data.wind.direction)}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </Popup>\n              </Marker>\n            </React.Fragment>\n          ))}\n        </MapContainer>\n      </div>\n      \n      {loading && (\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p>Loading weather data...</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {selectedCity && (\n        <div className=\"selected-city-details\">\n          <h3>Selected Location: {selectedCity.location.name}</h3>\n          <div className=\"weather-card\">\n            <div className=\"weather-header\">\n              <div className=\"temperature-large\">\n                {Math.round(selectedCity.weather.temperature)}Â°C\n                <span className=\"feels-like\">Feels like: {Math.round(selectedCity.weather.feelsLike)}Â°C</span>\n              </div>\n              <div className=\"weather-icon-large\">\n                <img \n                  src={`https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`} \n                  alt={selectedCity.weather.description}\n                />\n                <span>{selectedCity.weather.description}</span>\n              </div>\n            </div>\n            \n            <div className=\"current-conditions\">\n              <h4>Current Conditions</h4>\n              <div className=\"weather-details-grid\">\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð§</span>\n                  <span className=\"detail-label\">Humidity</span>\n                  <span className=\"detail-value\">{selectedCity.weather.humidity}%</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð¡ï¸</span>\n                  <span className=\"detail-label\">Pressure</span>\n                  <span className=\"detail-value\">{selectedCity.weather.pressure} hPa</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð¨</span>\n                  <span className=\"detail-label\">Wind Speed</span>\n                  <span className=\"detail-value\">{selectedCity.wind.speed.toFixed(1)} m/s</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð§­</span>\n                  <span className=\"detail-label\">Wind Direction</span>\n                  <span className=\"detail-value\">{getWindDirection(selectedCity.wind.direction)}</span>\n                </div>\n                {selectedCity.wind.gust && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-icon\">ð¨</span>\n                    <span className=\"detail-label\">Wind Gusts</span>\n                    <span className=\"detail-value\">{selectedCity.wind.gust.toFixed(1)} m/s</span>\n                  </div>\n                )}\n                {selectedCity.weather.cloudiness !== undefined && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-icon\">âï¸</span>\n                    <span className=\"detail-label\">Cloudiness</span>\n                    <span className=\"detail-value\">{selectedCity.weather.cloudiness}%</span>\n                  </div>\n                )}\n                {selectedCity.weather.visibility !== undefined && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-icon\">ðï¸</span>\n                    <span className=\"detail-label\">Visibility</span>\n                    <span className=\"detail-value\">\n                      {selectedCity.weather.visibility >= 10000 \n                        ? '10+ km' \n                        : `${(selectedCity.weather.visibility / 1000).toFixed(1)} km`}\n                    </span>\n                  </div>\n                )}\n                {selectedCity.sun && (\n                  <>\n                    <div className=\"detail-item\">\n                      <span className=\"detail-icon\">ð</span>\n                      <span className=\"detail-label\">Sunrise</span>\n                      <span className=\"detail-value\">{new Date(selectedCity.sun.sunrise).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</span>\n                    </div>\n                    <div className=\"detail-item\">\n                      <span className=\"detail-icon\">ð</span>\n                      <span className=\"detail-label\">Sunset</span>\n                      <span className=\"detail-value\">{new Date(selectedCity.sun.sunset).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</span>\n                    </div>\n                  </>\n                )}\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð</span>\n                  <span className=\"detail-label\">Coordinates</span>\n                  <span className=\"detail-value\">\n                    {selectedCity.location.lat.toFixed(4)}, {selectedCity.location.lng.toFixed(4)}\n                  </span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð</span>\n                  <span className=\"detail-label\">Updated</span>\n                  <span className=\"detail-value\">{formatDate(selectedCity.timestamp)}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"temperature-legend\">\n        <h4>Temperature Scale (Â°C)</h4>\n        <div className=\"legend-gradient\">\n          <div className=\"gradient-bar\"></div>\n          <div className=\"gradient-labels\">\n            <span>-10Â°</span>\n            <span>0Â°</span>\n            <span>10Â°</span>\n            <span>20Â°</span>\n            <span>30Â°</span>\n            <span>40Â°+</span>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"climate-change-section\">\n        <h2>Climate Change Insights</h2>\n        <div className=\"climate-insights-container\">\n          <div className=\"climate-insight-card\">\n            <div className=\"insight-icon\">ð¡ï¸</div>\n            <h3>Global Temperature Rise</h3>\n            <p>Earth's average temperature has increased by 1.1Â°C since the pre-industrial era. Without action, we're headed for a 3-4Â°C rise by 2100.</p>\n            <div className=\"insight-stat\">+1.1Â°C</div>\n          </div>\n          \n          <div className=\"climate-insight-card\">\n            <div className=\"insight-icon\">ð</div>\n            <h3>Sea Level Rise</h3>\n            <p>Global sea levels have risen about 8-9 inches since 1880, with the rate accelerating to 3.7mm per year in recent decades.</p>\n            <div className=\"insight-stat\">+3.7mm/year</div>\n          </div>\n          \n          <div className=\"climate-insight-card\">\n            <div className=\"insight-icon\">âï¸</div>\n            <h3>Arctic Ice Loss</h3>\n            <p>The Arctic is losing 13.1% of its ice per decade. Summer Arctic sea ice could disappear completely by 2050.</p>\n            <div className=\"insight-stat\">-13.1%/decade</div>\n          </div>\n          \n          <div className=\"climate-insight-card\">\n            <div className=\"insight-icon\">ðªï¸</div>\n            <h3>Extreme Weather</h3>\n            <p>Climate change is increasing the frequency and intensity of extreme weather events like hurricanes, droughts, and wildfires.</p>\n            <div className=\"insight-stat\">+20% since 1980</div>\n          </div>\n        </div>\n        \n        <div className=\"climate-action-section\">\n          <h3>What Can We Do?</h3>\n          <ul className=\"climate-actions\">\n            <li><span className=\"action-icon\">ð</span> Transition to renewable energy sources</li>\n            <li><span className=\"action-icon\">ð±</span> Support reforestation and conservation efforts</li>\n            <li><span className=\"action-icon\">ð</span> Reduce carbon footprint through sustainable transportation</li>\n            <li><span className=\"action-icon\">ð½ï¸</span> Choose plant-based meals and reduce food waste</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalTemperatureMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}