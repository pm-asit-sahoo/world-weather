{"ast":null,"code":"var _jsxFileName = \"/Users/asit/CascadeProjects/climate-dashboard-new/src/components/charts/SeaLevelChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport '../../styles/Charts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SeaLevelChart = ({\n  data,\n  simplified = false\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (!data || !chartRef.current) return;\n\n    // Destroy existing chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n    const ctx = chartRef.current.getContext('2d');\n\n    // Prepare data for the chart\n    const years = data.map(item => item.year);\n    const riseValues = data.map(item => item.rise);\n\n    // Create gradient for background\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, 'rgba(54, 162, 235, 0.7)');\n    gradient.addColorStop(1, 'rgba(54, 162, 235, 0)');\n\n    // Create the chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: years,\n        datasets: [{\n          label: 'Sea Level Rise (mm)',\n          data: riseValues,\n          borderColor: 'rgb(54, 162, 235)',\n          backgroundColor: gradient,\n          borderWidth: 2,\n          pointRadius: simplified ? 0 : 3,\n          pointBackgroundColor: 'rgb(54, 162, 235)',\n          tension: 0.4,\n          fill: true\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: !simplified,\n            position: 'top'\n          },\n          tooltip: {\n            enabled: true,\n            mode: 'index',\n            intersect: false,\n            callbacks: {\n              label: function (context) {\n                return `Rise: ${context.parsed.y.toFixed(1)} mm`;\n              }\n            }\n          },\n          title: {\n            display: !simplified,\n            text: 'Global Mean Sea Level Rise',\n            font: {\n              size: 16\n            }\n          }\n        },\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: !simplified,\n              text: 'Year'\n            },\n            ticks: {\n              maxTicksLimit: simplified ? 5 : 10\n            }\n          },\n          y: {\n            display: true,\n            title: {\n              display: !simplified,\n              text: 'Sea Level Rise (mm)'\n            },\n            suggestedMin: -150,\n            suggestedMax: 120\n          }\n        }\n      }\n    });\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, simplified]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(SeaLevelChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = SeaLevelChart;\nexport default SeaLevelChart;\nvar _c;\n$RefreshReg$(_c, \"SeaLevelChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","SeaLevelChart","data","simplified","_s","chartRef","chartInstance","current","destroy","ctx","getContext","years","map","item","year","riseValues","rise","gradient","createLinearGradient","addColorStop","type","labels","datasets","label","borderColor","backgroundColor","borderWidth","pointRadius","pointBackgroundColor","tension","fill","options","responsive","maintainAspectRatio","plugins","legend","display","position","tooltip","enabled","mode","intersect","callbacks","context","parsed","y","toFixed","title","text","font","size","scales","x","ticks","maxTicksLimit","suggestedMin","suggestedMax","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/asit/CascadeProjects/climate-dashboard-new/src/components/charts/SeaLevelChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport '../../styles/Charts.css';\n\nconst SeaLevelChart = ({ data, simplified = false }) => {\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n\n  useEffect(() => {\n    if (!data || !chartRef.current) return;\n\n    // Destroy existing chart if it exists\n    if (chartInstance.current) {\n      chartInstance.current.destroy();\n    }\n\n    const ctx = chartRef.current.getContext('2d');\n    \n    // Prepare data for the chart\n    const years = data.map(item => item.year);\n    const riseValues = data.map(item => item.rise);\n    \n    // Create gradient for background\n    const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n    gradient.addColorStop(0, 'rgba(54, 162, 235, 0.7)');\n    gradient.addColorStop(1, 'rgba(54, 162, 235, 0)');\n\n    // Create the chart\n    chartInstance.current = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: years,\n        datasets: [\n          {\n            label: 'Sea Level Rise (mm)',\n            data: riseValues,\n            borderColor: 'rgb(54, 162, 235)',\n            backgroundColor: gradient,\n            borderWidth: 2,\n            pointRadius: simplified ? 0 : 3,\n            pointBackgroundColor: 'rgb(54, 162, 235)',\n            tension: 0.4,\n            fill: true\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: !simplified,\n            position: 'top',\n          },\n          tooltip: {\n            enabled: true,\n            mode: 'index',\n            intersect: false,\n            callbacks: {\n              label: function(context) {\n                return `Rise: ${context.parsed.y.toFixed(1)} mm`;\n              }\n            }\n          },\n          title: {\n            display: !simplified,\n            text: 'Global Mean Sea Level Rise',\n            font: {\n              size: 16\n            }\n          }\n        },\n        scales: {\n          x: {\n            display: true,\n            title: {\n              display: !simplified,\n              text: 'Year'\n            },\n            ticks: {\n              maxTicksLimit: simplified ? 5 : 10\n            }\n          },\n          y: {\n            display: true,\n            title: {\n              display: !simplified,\n              text: 'Sea Level Rise (mm)'\n            },\n            suggestedMin: -150,\n            suggestedMax: 120\n          }\n        }\n      }\n    });\n\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data, simplified]);\n\n  return (\n    <div className=\"chart-wrapper\">\n      <canvas ref={chartRef}></canvas>\n    </div>\n  );\n};\n\nexport default SeaLevelChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}