{"ast":null,"code":"var _jsxFileName = \"/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = temperature => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({\n  onMapClick\n}) => {\n  _s();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n_s(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = MapClickHandler;\nconst GlobalTemperatureMap = () => {\n  _s2();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [{\n    name: 'New York',\n    lat: 40.7128,\n    lng: -74.0060\n  }, {\n    name: 'London',\n    lat: 51.5074,\n    lng: -0.1278\n  }, {\n    name: 'Tokyo',\n    lat: 35.6762,\n    lng: 139.6503\n  }, {\n    name: 'Sydney',\n    lat: -33.8688,\n    lng: 151.2093\n  }, {\n    name: 'Cairo',\n    lat: 30.0444,\n    lng: 31.2357\n  }, {\n    name: 'Rio de Janeiro',\n    lat: -22.9068,\n    lng: -43.1729\n  }, {\n    name: 'Moscow',\n    lat: 55.7558,\n    lng: 37.6173\n  }, {\n    name: 'Delhi',\n    lat: 28.6139,\n    lng: 77.2090\n  }];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => fetchWeatherForLocation(city.lat, city.lng, city.name));\n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // In a real app, you would use an actual API key\n      // For demo purposes, we're using OpenWeatherMap API\n      const apiKey = 'demo_key'; // Replace with your actual API key in production\n\n      // For development, we'll use mock data instead of making actual API calls\n      // In production, uncomment the following line and use your actual API key\n      // const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n\n      // Mock response for development\n      const mockResponse = getMockWeatherData(lat, lng, cityName);\n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: mockResponse.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: mockResponse.main.temp,\n          feelsLike: mockResponse.main.feels_like,\n          humidity: mockResponse.main.humidity,\n          pressure: mockResponse.main.pressure,\n          description: mockResponse.weather[0].description,\n          icon: mockResponse.weather[0].icon\n        },\n        wind: {\n          speed: mockResponse.wind.speed,\n          direction: mockResponse.wind.deg\n        },\n        timestamp: new Date().toISOString()\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      return null;\n    }\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to generate mock weather data based on latitude and longitude\n  const getMockWeatherData = (lat, lng, cityName = null) => {\n    // Generate realistic temperature based on latitude (equator is hotter)\n    const baseTemp = 15; // Base temperature\n    const latEffect = Math.abs(lat) / 90 * 30; // Temperature decreases as we move away from equator\n    const randomVariation = Math.random() * 10 - 5; // Random variation between -5 and 5\n    const temperature = baseTemp - latEffect + randomVariation;\n\n    // Generate city name if not provided\n    const name = cityName || `Location (${lat.toFixed(2)}, ${lng.toFixed(2)})`;\n\n    // Weather conditions based on temperature\n    let weatherCondition, weatherIcon;\n    if (temperature < 0) {\n      weatherCondition = 'snow';\n      weatherIcon = '13d';\n    } else if (temperature < 10) {\n      weatherCondition = 'few clouds';\n      weatherIcon = '02d';\n    } else if (temperature < 20) {\n      weatherCondition = 'scattered clouds';\n      weatherIcon = '03d';\n    } else if (temperature < 30) {\n      weatherCondition = 'clear sky';\n      weatherIcon = '01d';\n    } else {\n      weatherCondition = 'haze';\n      weatherIcon = '50d';\n    }\n    return {\n      name: name,\n      main: {\n        temp: temperature,\n        feels_like: temperature - 2 + Math.random() * 4,\n        humidity: 30 + Math.floor(Math.random() * 70),\n        pressure: 1000 + Math.floor(Math.random() * 30)\n      },\n      weather: [{\n        description: weatherCondition,\n        icon: weatherIcon\n      }],\n      wind: {\n        speed: 1 + Math.random() * 9,\n        deg: Math.floor(Math.random() * 360)\n      }\n    };\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = degrees => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = temp => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n\n  // Function to handle search for places\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    setError(null);\n    try {\n      // In a real app, you would use an actual geocoding API like OpenStreetMap Nominatim or Google Places API\n      // For demo purposes, we'll use a mock geocoding function\n      const results = await mockGeocodingSearch(searchQuery);\n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n      setIsSearching(false);\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n      setIsSearching(false);\n    }\n  };\n\n  // Mock geocoding function - in production, replace with actual API call\n  const mockGeocodingSearch = async query => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 800));\n\n    // Generate mock results based on query\n    // In a real app, you would call a geocoding API like:\n    // const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`);\n\n    // Some predefined places for demo\n    const predefinedPlaces = [{\n      name: 'New York',\n      country: 'United States',\n      lat: 40.7128,\n      lng: -74.0060\n    }, {\n      name: 'London',\n      country: 'United Kingdom',\n      lat: 51.5074,\n      lng: -0.1278\n    }, {\n      name: 'Tokyo',\n      country: 'Japan',\n      lat: 35.6762,\n      lng: 139.6503\n    }, {\n      name: 'Paris',\n      country: 'France',\n      lat: 48.8566,\n      lng: 2.3522\n    }, {\n      name: 'Sydney',\n      country: 'Australia',\n      lat: -33.8688,\n      lng: 151.2093\n    }, {\n      name: 'Mumbai',\n      country: 'India',\n      lat: 19.0760,\n      lng: 72.8777\n    }, {\n      name: 'Rio de Janeiro',\n      country: 'Brazil',\n      lat: -22.9068,\n      lng: -43.1729\n    }, {\n      name: 'Cairo',\n      country: 'Egypt',\n      lat: 30.0444,\n      lng: 31.2357\n    }, {\n      name: 'Moscow',\n      country: 'Russia',\n      lat: 55.7558,\n      lng: 37.6173\n    }, {\n      name: 'Berlin',\n      country: 'Germany',\n      lat: 52.5200,\n      lng: 13.4050\n    }, {\n      name: 'Madrid',\n      country: 'Spain',\n      lat: 40.4168,\n      lng: -3.7038\n    }, {\n      name: 'Toronto',\n      country: 'Canada',\n      lat: 43.6532,\n      lng: -79.3832\n    }, {\n      name: 'Beijing',\n      country: 'China',\n      lat: 39.9042,\n      lng: 116.4074\n    }, {\n      name: 'Cape Town',\n      country: 'South Africa',\n      lat: -33.9249,\n      lng: 18.4241\n    }, {\n      name: 'Mexico City',\n      country: 'Mexico',\n      lat: 19.4326,\n      lng: -99.1332\n    }, {\n      name: 'Bangkok',\n      country: 'Thailand',\n      lat: 13.7563,\n      lng: 100.5018\n    }, {\n      name: 'Dubai',\n      country: 'UAE',\n      lat: 25.2048,\n      lng: 55.2708\n    }, {\n      name: 'Singapore',\n      country: 'Singapore',\n      lat: 1.3521,\n      lng: 103.8198\n    }, {\n      name: 'Stockholm',\n      country: 'Sweden',\n      lat: 59.3293,\n      lng: 18.0686\n    }, {\n      name: 'Buenos Aires',\n      country: 'Argentina',\n      lat: -34.6037,\n      lng: -58.3816\n    }, {\n      name: 'Nairobi',\n      country: 'Kenya',\n      lat: -1.2921,\n      lng: 36.8219\n    }, {\n      name: 'Seoul',\n      country: 'South Korea',\n      lat: 37.5665,\n      lng: 126.9780\n    }, {\n      name: 'Amsterdam',\n      country: 'Netherlands',\n      lat: 52.3676,\n      lng: 4.9041\n    }, {\n      name: 'Rome',\n      country: 'Italy',\n      lat: 41.9028,\n      lng: 12.4964\n    }, {\n      name: 'Istanbul',\n      country: 'Turkey',\n      lat: 41.0082,\n      lng: 28.9784\n    }, {\n      name: 'Jakarta',\n      country: 'Indonesia',\n      lat: -6.2088,\n      lng: 106.8456\n    }, {\n      name: 'Lagos',\n      country: 'Nigeria',\n      lat: 6.5244,\n      lng: 3.3792\n    }, {\n      name: 'Lima',\n      country: 'Peru',\n      lat: -12.0464,\n      lng: -77.0428\n    }, {\n      name: 'Dhaka',\n      country: 'Bangladesh',\n      lat: 23.8103,\n      lng: 90.4125\n    }, {\n      name: 'Bangalore',\n      country: 'India',\n      lat: 12.9716,\n      lng: 77.5946\n    }, {\n      name: 'Delhi',\n      country: 'India',\n      lat: 28.6139,\n      lng: 77.2090\n    }, {\n      name: 'Kolkata',\n      country: 'India',\n      lat: 22.5726,\n      lng: 88.3639\n    }, {\n      name: 'Chennai',\n      country: 'India',\n      lat: 13.0827,\n      lng: 80.2707\n    }, {\n      name: 'Hyderabad',\n      country: 'India',\n      lat: 17.3850,\n      lng: 78.4867\n    }, {\n      name: 'Pune',\n      country: 'India',\n      lat: 18.5204,\n      lng: 73.8567\n    }, {\n      name: 'Ahmedabad',\n      country: 'India',\n      lat: 23.0225,\n      lng: 72.5714\n    }, {\n      name: 'Jaipur',\n      country: 'India',\n      lat: 26.9124,\n      lng: 75.7873\n    }, {\n      name: 'Lucknow',\n      country: 'India',\n      lat: 26.8467,\n      lng: 80.9462\n    }, {\n      name: 'Kanpur',\n      country: 'India',\n      lat: 26.4499,\n      lng: 80.3319\n    }, {\n      name: 'Nagpur',\n      country: 'India',\n      lat: 21.1458,\n      lng: 79.0882\n    }];\n\n    // Filter places based on query\n    const lowercaseQuery = query.toLowerCase();\n    const results = predefinedPlaces.filter(place => place.name.toLowerCase().includes(lowercaseQuery) || place.country.toLowerCase().includes(lowercaseQuery));\n\n    // Add some randomized small towns/districts if query is specific enough and not matching major cities\n    if (lowercaseQuery.length > 3 && results.length < 3) {\n      // Generate some fictional places with slight variations on coordinates\n      const baseCoord = {\n        lat: 20 + Math.random() * 30,\n        lng: 40 + Math.random() * 60\n      };\n      const smallPlaces = [{\n        name: `${query} Town`,\n        country: 'Local Region',\n        lat: baseCoord.lat + (Math.random() * 2 - 1),\n        lng: baseCoord.lng + (Math.random() * 2 - 1)\n      }, {\n        name: `${query} District`,\n        country: 'Local Region',\n        lat: baseCoord.lat + (Math.random() * 2 - 1),\n        lng: baseCoord.lng + (Math.random() * 2 - 1)\n      }, {\n        name: `${query} Village`,\n        country: 'Local Region',\n        lat: baseCoord.lat + (Math.random() * 2 - 1),\n        lng: baseCoord.lng + (Math.random() * 2 - 1)\n      }];\n      results.push(...smallPlaces);\n    }\n\n    // Format results to match what would come from a geocoding API\n    return results.slice(0, 5).map((place, index) => ({\n      id: `place-${index}-${Date.now()}`,\n      name: place.name,\n      country: place.country,\n      lat: place.lat,\n      lng: place.lng,\n      display_name: `${place.name}, ${place.country}`\n    }));\n  };\n\n  // Function to select a search result\n  const selectSearchResult = async result => {\n    setSearchResults([]);\n    setSearchQuery('');\n\n    // Center map on selected location\n    if (mapRef.current) {\n      mapRef.current.setView([result.lat, result.lng], 10);\n    }\n\n    // Fetch weather for the selected location\n    setLoading(true);\n    try {\n      const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n      if (weatherData) {\n        setWeatherData(prevData => {\n          // Check if we already have weather data for this location\n          const existingIndex = prevData.findIndex(item => Math.abs(item.location.lat - result.lat) < 0.01 && Math.abs(item.location.lng - result.lng) < 0.01);\n          if (existingIndex >= 0) {\n            // Update existing data\n            const updatedData = [...prevData];\n            updatedData[existingIndex] = weatherData;\n            return updatedData;\n          } else {\n            // Add new data\n            return [...prevData, weatherData];\n          }\n        });\n        setSelectedCity(weatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data for search result:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-temperature-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Global Temperature Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for any city, town, district, or place...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-button\",\n          disabled: isSearching,\n          children: isSearching ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-item\",\n          onClick: () => selectSearchResult(result),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-name\",\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-location\",\n            children: result.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 17\n          }, this)]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"map-instructions\",\n      children: \"Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 2,\n        minZoom: 2,\n        maxBounds: [[-90, -180], [90, 180]],\n        scrollWheelZoom: true,\n        className: \"globe-map-container\",\n        ref: mapRef,\n        worldCopyJump: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n          onMapClick: handleMapClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), weatherData.map(data => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {\n            center: [data.location.lat, data.location.lng],\n            radius: 50000,\n            pathOptions: {\n              fillColor: getTemperatureColor(data.weather.temperature),\n              fillOpacity: 0.5,\n              color: getTemperatureColor(data.weather.temperature),\n              weight: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [data.location.lat, data.location.lng],\n            icon: getTemperatureIcon(data.weather.temperature),\n            eventHandlers: {\n              click: () => {\n                setSelectedCity(data);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-popup\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: data.location.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-main\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"temperature\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"temp-value\",\n                      children: [Math.round(data.weather.temperature), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 476,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"feels-like\",\n                      children: [\"Feels like: \", Math.round(data.weather.feelsLike), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 477,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"weather-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`,\n                      alt: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Humidity:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 489,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.weather.humidity, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 490,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Pressure:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 493,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.weather.pressure, \" hPa\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Wind:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.wind.speed.toFixed(1), \" m/s \", getWindDirection(data.wind.direction)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Updated:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: formatDate(data.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-city-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Location: \", selectedCity.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature-large\",\n            children: [Math.round(selectedCity.weather.temperature), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feels-like\",\n              children: [\"Feels like: \", Math.round(selectedCity.weather.feelsLike), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-icon-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`,\n              alt: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-details-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.weather.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83C\\uDF21\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.weather.pressure, \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDCA8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Wind Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.wind.speed.toFixed(1), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83E\\uDDED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Wind Direction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: getWindDirection(selectedCity.wind.direction)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Coordinates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.location.lat.toFixed(4), \", \", selectedCity.location.lng.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDD52\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: formatDate(selectedCity.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Temperature Scale (\\xB0C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-gradient\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"0\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"30\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"40\\xB0+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n};\n_s2(GlobalTemperatureMap, \"SpqwXIUbE+1vWQsICg59jnUyL6M=\");\n_c2 = GlobalTemperatureMap;\nexport default GlobalTemperatureMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapClickHandler\");\n$RefreshReg$(_c2, \"GlobalTemperatureMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","useMapEvents","Marker","Popup","Circle","L","axios","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","getTemperatureIcon","temperature","color","divIcon","className","html","Math","round","iconSize","iconAnchor","popupAnchor","MapClickHandler","onMapClick","_s","click","e","lat","lng","latlng","_c","GlobalTemperatureMap","_s2","weatherData","setWeatherData","loading","setLoading","error","setError","selectedCity","setSelectedCity","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","mapRef","majorCities","name","fetchInitialWeatherData","promises","map","city","fetchWeatherForLocation","results","Promise","all","filter","data","err","console","cityName","apiKey","mockResponse","getMockWeatherData","id","Date","now","random","location","weather","main","temp","feelsLike","feels_like","humidity","pressure","description","icon","wind","speed","direction","deg","timestamp","toISOString","handleMapClick","newWeatherData","prevData","baseTemp","latEffect","abs","randomVariation","toFixed","weatherCondition","weatherIcon","floor","getWindDirection","degrees","directions","index","formatDate","isoString","date","toLocaleString","getTemperatureColor","handleSearch","preventDefault","trim","mockGeocodingSearch","length","query","resolve","setTimeout","predefinedPlaces","country","lowercaseQuery","toLowerCase","place","includes","baseCoord","smallPlaces","push","slice","display_name","selectSearchResult","result","current","setView","existingIndex","findIndex","item","updatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","onClick","center","zoom","minZoom","maxBounds","scrollWheelZoom","ref","worldCopyJump","attribution","url","Fragment","radius","pathOptions","fillColor","fillOpacity","weight","position","eventHandlers","src","alt","_c2","$RefreshReg$"],"sources":["/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = (temperature) => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({ onMapClick }) => {\n  useMapEvents({\n    click: (e) => {\n      const { lat, lng } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n\nconst GlobalTemperatureMap = () => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [\n    { name: 'New York', lat: 40.7128, lng: -74.0060 },\n    { name: 'London', lat: 51.5074, lng: -0.1278 },\n    { name: 'Tokyo', lat: 35.6762, lng: 139.6503 },\n    { name: 'Sydney', lat: -33.8688, lng: 151.2093 },\n    { name: 'Cairo', lat: 30.0444, lng: 31.2357 },\n    { name: 'Rio de Janeiro', lat: -22.9068, lng: -43.1729 },\n    { name: 'Moscow', lat: 55.7558, lng: 37.6173 },\n    { name: 'Delhi', lat: 28.6139, lng: 77.2090 }\n  ];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => \n          fetchWeatherForLocation(city.lat, city.lng, city.name)\n        );\n        \n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // In a real app, you would use an actual API key\n      // For demo purposes, we're using OpenWeatherMap API\n      const apiKey = 'demo_key'; // Replace with your actual API key in production\n      \n      // For development, we'll use mock data instead of making actual API calls\n      // In production, uncomment the following line and use your actual API key\n      // const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n      \n      // Mock response for development\n      const mockResponse = getMockWeatherData(lat, lng, cityName);\n      \n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: mockResponse.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: mockResponse.main.temp,\n          feelsLike: mockResponse.main.feels_like,\n          humidity: mockResponse.main.humidity,\n          pressure: mockResponse.main.pressure,\n          description: mockResponse.weather[0].description,\n          icon: mockResponse.weather[0].icon\n        },\n        wind: {\n          speed: mockResponse.wind.speed,\n          direction: mockResponse.wind.deg\n        },\n        timestamp: new Date().toISOString()\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      return null;\n    }\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to generate mock weather data based on latitude and longitude\n  const getMockWeatherData = (lat, lng, cityName = null) => {\n    // Generate realistic temperature based on latitude (equator is hotter)\n    const baseTemp = 15; // Base temperature\n    const latEffect = Math.abs(lat) / 90 * 30; // Temperature decreases as we move away from equator\n    const randomVariation = Math.random() * 10 - 5; // Random variation between -5 and 5\n    const temperature = baseTemp - latEffect + randomVariation;\n    \n    // Generate city name if not provided\n    const name = cityName || `Location (${lat.toFixed(2)}, ${lng.toFixed(2)})`;\n    \n    // Weather conditions based on temperature\n    let weatherCondition, weatherIcon;\n    if (temperature < 0) {\n      weatherCondition = 'snow';\n      weatherIcon = '13d';\n    } else if (temperature < 10) {\n      weatherCondition = 'few clouds';\n      weatherIcon = '02d';\n    } else if (temperature < 20) {\n      weatherCondition = 'scattered clouds';\n      weatherIcon = '03d';\n    } else if (temperature < 30) {\n      weatherCondition = 'clear sky';\n      weatherIcon = '01d';\n    } else {\n      weatherCondition = 'haze';\n      weatherIcon = '50d';\n    }\n    \n    return {\n      name: name,\n      main: {\n        temp: temperature,\n        feels_like: temperature - 2 + Math.random() * 4,\n        humidity: 30 + Math.floor(Math.random() * 70),\n        pressure: 1000 + Math.floor(Math.random() * 30)\n      },\n      weather: [\n        {\n          description: weatherCondition,\n          icon: weatherIcon\n        }\n      ],\n      wind: {\n        speed: 1 + Math.random() * 9,\n        deg: Math.floor(Math.random() * 360)\n      }\n    };\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = (degrees) => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = (temp) => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n\n  // Function to handle search for places\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    \n    setIsSearching(true);\n    setError(null);\n    \n    try {\n      // In a real app, you would use an actual geocoding API like OpenStreetMap Nominatim or Google Places API\n      // For demo purposes, we'll use a mock geocoding function\n      const results = await mockGeocodingSearch(searchQuery);\n      \n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n      \n      setIsSearching(false);\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n      setIsSearching(false);\n    }\n  };\n  \n  // Mock geocoding function - in production, replace with actual API call\n  const mockGeocodingSearch = async (query) => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    // Generate mock results based on query\n    // In a real app, you would call a geocoding API like:\n    // const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`);\n    \n    // Some predefined places for demo\n    const predefinedPlaces = [\n      { name: 'New York', country: 'United States', lat: 40.7128, lng: -74.0060 },\n      { name: 'London', country: 'United Kingdom', lat: 51.5074, lng: -0.1278 },\n      { name: 'Tokyo', country: 'Japan', lat: 35.6762, lng: 139.6503 },\n      { name: 'Paris', country: 'France', lat: 48.8566, lng: 2.3522 },\n      { name: 'Sydney', country: 'Australia', lat: -33.8688, lng: 151.2093 },\n      { name: 'Mumbai', country: 'India', lat: 19.0760, lng: 72.8777 },\n      { name: 'Rio de Janeiro', country: 'Brazil', lat: -22.9068, lng: -43.1729 },\n      { name: 'Cairo', country: 'Egypt', lat: 30.0444, lng: 31.2357 },\n      { name: 'Moscow', country: 'Russia', lat: 55.7558, lng: 37.6173 },\n      { name: 'Berlin', country: 'Germany', lat: 52.5200, lng: 13.4050 },\n      { name: 'Madrid', country: 'Spain', lat: 40.4168, lng: -3.7038 },\n      { name: 'Toronto', country: 'Canada', lat: 43.6532, lng: -79.3832 },\n      { name: 'Beijing', country: 'China', lat: 39.9042, lng: 116.4074 },\n      { name: 'Cape Town', country: 'South Africa', lat: -33.9249, lng: 18.4241 },\n      { name: 'Mexico City', country: 'Mexico', lat: 19.4326, lng: -99.1332 },\n      { name: 'Bangkok', country: 'Thailand', lat: 13.7563, lng: 100.5018 },\n      { name: 'Dubai', country: 'UAE', lat: 25.2048, lng: 55.2708 },\n      { name: 'Singapore', country: 'Singapore', lat: 1.3521, lng: 103.8198 },\n      { name: 'Stockholm', country: 'Sweden', lat: 59.3293, lng: 18.0686 },\n      { name: 'Buenos Aires', country: 'Argentina', lat: -34.6037, lng: -58.3816 },\n      { name: 'Nairobi', country: 'Kenya', lat: -1.2921, lng: 36.8219 },\n      { name: 'Seoul', country: 'South Korea', lat: 37.5665, lng: 126.9780 },\n      { name: 'Amsterdam', country: 'Netherlands', lat: 52.3676, lng: 4.9041 },\n      { name: 'Rome', country: 'Italy', lat: 41.9028, lng: 12.4964 },\n      { name: 'Istanbul', country: 'Turkey', lat: 41.0082, lng: 28.9784 },\n      { name: 'Jakarta', country: 'Indonesia', lat: -6.2088, lng: 106.8456 },\n      { name: 'Lagos', country: 'Nigeria', lat: 6.5244, lng: 3.3792 },\n      { name: 'Lima', country: 'Peru', lat: -12.0464, lng: -77.0428 },\n      { name: 'Dhaka', country: 'Bangladesh', lat: 23.8103, lng: 90.4125 },\n      { name: 'Bangalore', country: 'India', lat: 12.9716, lng: 77.5946 },\n      { name: 'Delhi', country: 'India', lat: 28.6139, lng: 77.2090 },\n      { name: 'Kolkata', country: 'India', lat: 22.5726, lng: 88.3639 },\n      { name: 'Chennai', country: 'India', lat: 13.0827, lng: 80.2707 },\n      { name: 'Hyderabad', country: 'India', lat: 17.3850, lng: 78.4867 },\n      { name: 'Pune', country: 'India', lat: 18.5204, lng: 73.8567 },\n      { name: 'Ahmedabad', country: 'India', lat: 23.0225, lng: 72.5714 },\n      { name: 'Jaipur', country: 'India', lat: 26.9124, lng: 75.7873 },\n      { name: 'Lucknow', country: 'India', lat: 26.8467, lng: 80.9462 },\n      { name: 'Kanpur', country: 'India', lat: 26.4499, lng: 80.3319 },\n      { name: 'Nagpur', country: 'India', lat: 21.1458, lng: 79.0882 },\n    ];\n    \n    // Filter places based on query\n    const lowercaseQuery = query.toLowerCase();\n    const results = predefinedPlaces.filter(place => \n      place.name.toLowerCase().includes(lowercaseQuery) || \n      place.country.toLowerCase().includes(lowercaseQuery)\n    );\n    \n    // Add some randomized small towns/districts if query is specific enough and not matching major cities\n    if (lowercaseQuery.length > 3 && results.length < 3) {\n      // Generate some fictional places with slight variations on coordinates\n      const baseCoord = { lat: 20 + Math.random() * 30, lng: 40 + Math.random() * 60 };\n      \n      const smallPlaces = [\n        { \n          name: `${query} Town`, \n          country: 'Local Region', \n          lat: baseCoord.lat + (Math.random() * 2 - 1), \n          lng: baseCoord.lng + (Math.random() * 2 - 1) \n        },\n        { \n          name: `${query} District`, \n          country: 'Local Region', \n          lat: baseCoord.lat + (Math.random() * 2 - 1), \n          lng: baseCoord.lng + (Math.random() * 2 - 1) \n        },\n        { \n          name: `${query} Village`, \n          country: 'Local Region', \n          lat: baseCoord.lat + (Math.random() * 2 - 1), \n          lng: baseCoord.lng + (Math.random() * 2 - 1) \n        }\n      ];\n      \n      results.push(...smallPlaces);\n    }\n    \n    // Format results to match what would come from a geocoding API\n    return results.slice(0, 5).map((place, index) => ({\n      id: `place-${index}-${Date.now()}`,\n      name: place.name,\n      country: place.country,\n      lat: place.lat,\n      lng: place.lng,\n      display_name: `${place.name}, ${place.country}`\n    }));\n  };\n  \n  // Function to select a search result\n  const selectSearchResult = async (result) => {\n    setSearchResults([]);\n    setSearchQuery('');\n    \n    // Center map on selected location\n    if (mapRef.current) {\n      mapRef.current.setView([result.lat, result.lng], 10);\n    }\n    \n    // Fetch weather for the selected location\n    setLoading(true);\n    try {\n      const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n      if (weatherData) {\n        setWeatherData(prevData => {\n          // Check if we already have weather data for this location\n          const existingIndex = prevData.findIndex(item => \n            Math.abs(item.location.lat - result.lat) < 0.01 && \n            Math.abs(item.location.lng - result.lng) < 0.01\n          );\n          \n          if (existingIndex >= 0) {\n            // Update existing data\n            const updatedData = [...prevData];\n            updatedData[existingIndex] = weatherData;\n            return updatedData;\n          } else {\n            // Add new data\n            return [...prevData, weatherData];\n          }\n        });\n        setSelectedCity(weatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data for search result:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"global-temperature-map\">\n      <h2>Global Temperature Map</h2>\n      \n      <div className=\"search-container\">\n        <form onSubmit={handleSearch}>\n          <input\n            type=\"text\"\n            placeholder=\"Search for any city, town, district, or place...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-button\" disabled={isSearching}>\n            {isSearching ? 'Searching...' : 'Search'}\n          </button>\n        </form>\n        \n        {searchResults.length > 0 && (\n          <div className=\"search-results\">\n            {searchResults.map(result => (\n              <div \n                key={result.id} \n                className=\"search-result-item\"\n                onClick={() => selectSearchResult(result)}\n              >\n                <div className=\"result-name\">{result.name}</div>\n                <div className=\"result-location\">{result.display_name}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <p className=\"map-instructions\">\n        Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\n      </p>\n      \n      <div className=\"map-container-wrapper\">\n        <MapContainer\n          center={[20, 0]}\n          zoom={2}\n          minZoom={2}\n          maxBounds={[[-90, -180], [90, 180]]}\n          scrollWheelZoom={true}\n          className=\"globe-map-container\"\n          ref={mapRef}\n          worldCopyJump={true}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          <MapClickHandler onMapClick={handleMapClick} />\n          \n          {weatherData.map((data) => (\n            <React.Fragment key={data.id}>\n              <Circle\n                center={[data.location.lat, data.location.lng]}\n                radius={50000}\n                pathOptions={{\n                  fillColor: getTemperatureColor(data.weather.temperature),\n                  fillOpacity: 0.5,\n                  color: getTemperatureColor(data.weather.temperature),\n                  weight: 1\n                }}\n              />\n              <Marker\n                position={[data.location.lat, data.location.lng]}\n                icon={getTemperatureIcon(data.weather.temperature)}\n                eventHandlers={{\n                  click: () => {\n                    setSelectedCity(data);\n                  }\n                }}\n              >\n                <Popup>\n                  <div className=\"weather-popup\">\n                    <h3>{data.location.name}</h3>\n                    <div className=\"weather-main\">\n                      <div className=\"temperature\">\n                        <span className=\"temp-value\">{Math.round(data.weather.temperature)}Â°C</span>\n                        <span className=\"feels-like\">Feels like: {Math.round(data.weather.feelsLike)}Â°C</span>\n                      </div>\n                      <div className=\"weather-icon\">\n                        <img \n                          src={`https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`} \n                          alt={data.weather.description}\n                        />\n                        <span>{data.weather.description}</span>\n                      </div>\n                    </div>\n                    <div className=\"weather-details\">\n                      <div className=\"detail\">\n                        <span className=\"label\">Humidity:</span>\n                        <span className=\"value\">{data.weather.humidity}%</span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Pressure:</span>\n                        <span className=\"value\">{data.weather.pressure} hPa</span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Wind:</span>\n                        <span className=\"value\">\n                          {data.wind.speed.toFixed(1)} m/s {getWindDirection(data.wind.direction)}\n                        </span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Updated:</span>\n                        <span className=\"value\">{formatDate(data.timestamp)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </Popup>\n              </Marker>\n            </React.Fragment>\n          ))}\n        </MapContainer>\n      </div>\n      \n      {loading && (\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p>Loading weather data...</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {selectedCity && (\n        <div className=\"selected-city-details\">\n          <h3>Selected Location: {selectedCity.location.name}</h3>\n          <div className=\"weather-card\">\n            <div className=\"weather-header\">\n              <div className=\"temperature-large\">\n                {Math.round(selectedCity.weather.temperature)}Â°C\n                <span className=\"feels-like\">Feels like: {Math.round(selectedCity.weather.feelsLike)}Â°C</span>\n              </div>\n              <div className=\"weather-icon-large\">\n                <img \n                  src={`https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`} \n                  alt={selectedCity.weather.description}\n                />\n                <span>{selectedCity.weather.description}</span>\n              </div>\n            </div>\n            <div className=\"weather-details-grid\">\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð§</span>\n                <span className=\"detail-label\">Humidity</span>\n                <span className=\"detail-value\">{selectedCity.weather.humidity}%</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð¡ï¸</span>\n                <span className=\"detail-label\">Pressure</span>\n                <span className=\"detail-value\">{selectedCity.weather.pressure} hPa</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð¨</span>\n                <span className=\"detail-label\">Wind Speed</span>\n                <span className=\"detail-value\">{selectedCity.wind.speed.toFixed(1)} m/s</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð§­</span>\n                <span className=\"detail-label\">Wind Direction</span>\n                <span className=\"detail-value\">{getWindDirection(selectedCity.wind.direction)}</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð</span>\n                <span className=\"detail-label\">Coordinates</span>\n                <span className=\"detail-value\">\n                  {selectedCity.location.lat.toFixed(4)}, {selectedCity.location.lng.toFixed(4)}\n                </span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð</span>\n                <span className=\"detail-label\">Updated</span>\n                <span className=\"detail-value\">{formatDate(selectedCity.timestamp)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"temperature-legend\">\n        <h4>Temperature Scale (Â°C)</h4>\n        <div className=\"legend-gradient\">\n          <div className=\"gradient-bar\"></div>\n          <div className=\"gradient-labels\">\n            <span>-10Â°</span>\n            <span>0Â°</span>\n            <span>10Â°</span>\n            <span>20Â°</span>\n            <span>30Â°</span>\n            <span>40Â°+</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalTemperatureMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}