{"ast":null,"code":"var _jsxFileName = \"/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = temperature => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({\n  onMapClick\n}) => {\n  _s();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n_s(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = MapClickHandler;\nconst GlobalTemperatureMap = () => {\n  _s2();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [{\n    name: 'New York',\n    lat: 40.7128,\n    lng: -74.0060\n  }, {\n    name: 'London',\n    lat: 51.5074,\n    lng: -0.1278\n  }, {\n    name: 'Tokyo',\n    lat: 35.6762,\n    lng: 139.6503\n  }, {\n    name: 'Sydney',\n    lat: -33.8688,\n    lng: 151.2093\n  }, {\n    name: 'Cairo',\n    lat: 30.0444,\n    lng: 31.2357\n  }, {\n    name: 'Rio de Janeiro',\n    lat: -22.9068,\n    lng: -43.1729\n  }, {\n    name: 'Moscow',\n    lat: 55.7558,\n    lng: 37.6173\n  }, {\n    name: 'Delhi',\n    lat: 28.6139,\n    lng: 77.2090\n  }];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => fetchWeatherForLocation(city.lat, city.lng, city.name));\n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // In a real app, you would use an actual API key\n      // For demo purposes, we're using OpenWeatherMap API\n      const apiKey = 'demo_key'; // Replace with your actual API key in production\n\n      // For development, we'll use mock data instead of making actual API calls\n      // In production, uncomment the following line and use your actual API key\n      // const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n\n      // Mock response for development\n      const mockResponse = getMockWeatherData(lat, lng, cityName);\n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: mockResponse.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: mockResponse.main.temp,\n          feelsLike: mockResponse.main.feels_like,\n          humidity: mockResponse.main.humidity,\n          pressure: mockResponse.main.pressure,\n          description: mockResponse.weather[0].description,\n          icon: mockResponse.weather[0].icon\n        },\n        wind: {\n          speed: mockResponse.wind.speed,\n          direction: mockResponse.wind.deg\n        },\n        timestamp: new Date().toISOString()\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      return null;\n    }\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to generate mock weather data based on latitude and longitude\n  const getMockWeatherData = (lat, lng, cityName = null) => {\n    // Generate realistic temperature based on latitude (equator is hotter)\n    const baseTemp = 15; // Base temperature\n    const latEffect = Math.abs(lat) / 90 * 30; // Temperature decreases as we move away from equator\n    const randomVariation = Math.random() * 10 - 5; // Random variation between -5 and 5\n    const temperature = baseTemp - latEffect + randomVariation;\n\n    // Generate city name if not provided\n    const name = cityName || `Location (${lat.toFixed(2)}, ${lng.toFixed(2)})`;\n\n    // Weather conditions based on temperature\n    let weatherCondition, weatherIcon;\n    if (temperature < 0) {\n      weatherCondition = 'snow';\n      weatherIcon = '13d';\n    } else if (temperature < 10) {\n      weatherCondition = 'few clouds';\n      weatherIcon = '02d';\n    } else if (temperature < 20) {\n      weatherCondition = 'scattered clouds';\n      weatherIcon = '03d';\n    } else if (temperature < 30) {\n      weatherCondition = 'clear sky';\n      weatherIcon = '01d';\n    } else {\n      weatherCondition = 'haze';\n      weatherIcon = '50d';\n    }\n    return {\n      name: name,\n      main: {\n        temp: temperature,\n        feels_like: temperature - 2 + Math.random() * 4,\n        humidity: 30 + Math.floor(Math.random() * 70),\n        pressure: 1000 + Math.floor(Math.random() * 30)\n      },\n      weather: [{\n        description: weatherCondition,\n        icon: weatherIcon\n      }],\n      wind: {\n        speed: 1 + Math.random() * 9,\n        deg: Math.floor(Math.random() * 360)\n      }\n    };\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = degrees => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = temp => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-temperature-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Global Temperature Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"map-instructions\",\n      children: \"Click anywhere on the map to see current weather conditions. Spin the globe by dragging.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 2,\n        minZoom: 2,\n        maxBounds: [[-90, -180], [90, 180]],\n        scrollWheelZoom: true,\n        className: \"globe-map-container\",\n        ref: mapRef,\n        worldCopyJump: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n          onMapClick: handleMapClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), weatherData.map(data => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {\n            center: [data.location.lat, data.location.lng],\n            radius: 50000,\n            pathOptions: {\n              fillColor: getTemperatureColor(data.weather.temperature),\n              fillOpacity: 0.5,\n              color: getTemperatureColor(data.weather.temperature),\n              weight: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [data.location.lat, data.location.lng],\n            icon: getTemperatureIcon(data.weather.temperature),\n            eventHandlers: {\n              click: () => {\n                setSelectedCity(data);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-popup\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: data.location.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-main\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"temperature\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"temp-value\",\n                      children: [Math.round(data.weather.temperature), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"feels-like\",\n                      children: [\"Feels like: \", Math.round(data.weather.feelsLike), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"weather-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`,\n                      alt: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Humidity:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.weather.humidity, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Pressure:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.weather.pressure, \" hPa\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Wind:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.wind.speed.toFixed(1), \" m/s \", getWindDirection(data.wind.direction)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Updated:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: formatDate(data.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-city-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Location: \", selectedCity.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature-large\",\n            children: [Math.round(selectedCity.weather.temperature), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feels-like\",\n              children: [\"Feels like: \", Math.round(selectedCity.weather.feelsLike), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-icon-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`,\n              alt: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-details-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDCA7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.weather.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83C\\uDF21\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.weather.pressure, \" hPa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDCA8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Wind Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.wind.speed.toFixed(1), \" m/s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83E\\uDDED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Wind Direction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: getWindDirection(selectedCity.wind.direction)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Coordinates\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: [selectedCity.location.lat.toFixed(4), \", \", selectedCity.location.lng.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-icon\",\n              children: \"\\uD83D\\uDD52\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-label\",\n              children: \"Updated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"detail-value\",\n              children: formatDate(selectedCity.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Temperature Scale (\\xB0C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-gradient\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"0\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"30\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"40\\xB0+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s2(GlobalTemperatureMap, \"9M62DJ631VQdcPgfvad6y5YH32c=\");\n_c2 = GlobalTemperatureMap;\nexport default GlobalTemperatureMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapClickHandler\");\n$RefreshReg$(_c2, \"GlobalTemperatureMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","useMapEvents","Marker","Popup","Circle","L","axios","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","getTemperatureIcon","temperature","color","divIcon","className","html","Math","round","iconSize","iconAnchor","popupAnchor","MapClickHandler","onMapClick","_s","click","e","lat","lng","latlng","_c","GlobalTemperatureMap","_s2","weatherData","setWeatherData","loading","setLoading","error","setError","selectedCity","setSelectedCity","mapRef","majorCities","name","fetchInitialWeatherData","promises","map","city","fetchWeatherForLocation","results","Promise","all","filter","data","err","console","cityName","apiKey","mockResponse","getMockWeatherData","id","Date","now","random","location","weather","main","temp","feelsLike","feels_like","humidity","pressure","description","icon","wind","speed","direction","deg","timestamp","toISOString","handleMapClick","newWeatherData","prevData","baseTemp","latEffect","abs","randomVariation","toFixed","weatherCondition","weatherIcon","floor","getWindDirection","degrees","directions","index","formatDate","isoString","date","toLocaleString","getTemperatureColor","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","minZoom","maxBounds","scrollWheelZoom","ref","worldCopyJump","attribution","url","Fragment","radius","pathOptions","fillColor","fillOpacity","weight","position","eventHandlers","src","alt","_c2","$RefreshReg$"],"sources":["/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = (temperature) => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({ onMapClick }) => {\n  useMapEvents({\n    click: (e) => {\n      const { lat, lng } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n\nconst GlobalTemperatureMap = () => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [\n    { name: 'New York', lat: 40.7128, lng: -74.0060 },\n    { name: 'London', lat: 51.5074, lng: -0.1278 },\n    { name: 'Tokyo', lat: 35.6762, lng: 139.6503 },\n    { name: 'Sydney', lat: -33.8688, lng: 151.2093 },\n    { name: 'Cairo', lat: 30.0444, lng: 31.2357 },\n    { name: 'Rio de Janeiro', lat: -22.9068, lng: -43.1729 },\n    { name: 'Moscow', lat: 55.7558, lng: 37.6173 },\n    { name: 'Delhi', lat: 28.6139, lng: 77.2090 }\n  ];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => \n          fetchWeatherForLocation(city.lat, city.lng, city.name)\n        );\n        \n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // In a real app, you would use an actual API key\n      // For demo purposes, we're using OpenWeatherMap API\n      const apiKey = 'demo_key'; // Replace with your actual API key in production\n      \n      // For development, we'll use mock data instead of making actual API calls\n      // In production, uncomment the following line and use your actual API key\n      // const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n      \n      // Mock response for development\n      const mockResponse = getMockWeatherData(lat, lng, cityName);\n      \n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: mockResponse.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: mockResponse.main.temp,\n          feelsLike: mockResponse.main.feels_like,\n          humidity: mockResponse.main.humidity,\n          pressure: mockResponse.main.pressure,\n          description: mockResponse.weather[0].description,\n          icon: mockResponse.weather[0].icon\n        },\n        wind: {\n          speed: mockResponse.wind.speed,\n          direction: mockResponse.wind.deg\n        },\n        timestamp: new Date().toISOString()\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      return null;\n    }\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to generate mock weather data based on latitude and longitude\n  const getMockWeatherData = (lat, lng, cityName = null) => {\n    // Generate realistic temperature based on latitude (equator is hotter)\n    const baseTemp = 15; // Base temperature\n    const latEffect = Math.abs(lat) / 90 * 30; // Temperature decreases as we move away from equator\n    const randomVariation = Math.random() * 10 - 5; // Random variation between -5 and 5\n    const temperature = baseTemp - latEffect + randomVariation;\n    \n    // Generate city name if not provided\n    const name = cityName || `Location (${lat.toFixed(2)}, ${lng.toFixed(2)})`;\n    \n    // Weather conditions based on temperature\n    let weatherCondition, weatherIcon;\n    if (temperature < 0) {\n      weatherCondition = 'snow';\n      weatherIcon = '13d';\n    } else if (temperature < 10) {\n      weatherCondition = 'few clouds';\n      weatherIcon = '02d';\n    } else if (temperature < 20) {\n      weatherCondition = 'scattered clouds';\n      weatherIcon = '03d';\n    } else if (temperature < 30) {\n      weatherCondition = 'clear sky';\n      weatherIcon = '01d';\n    } else {\n      weatherCondition = 'haze';\n      weatherIcon = '50d';\n    }\n    \n    return {\n      name: name,\n      main: {\n        temp: temperature,\n        feels_like: temperature - 2 + Math.random() * 4,\n        humidity: 30 + Math.floor(Math.random() * 70),\n        pressure: 1000 + Math.floor(Math.random() * 30)\n      },\n      weather: [\n        {\n          description: weatherCondition,\n          icon: weatherIcon\n        }\n      ],\n      wind: {\n        speed: 1 + Math.random() * 9,\n        deg: Math.floor(Math.random() * 360)\n      }\n    };\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = (degrees) => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = (temp) => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n\n  return (\n    <div className=\"global-temperature-map\">\n      <h2>Global Temperature Map</h2>\n      <p className=\"map-instructions\">\n        Click anywhere on the map to see current weather conditions. Spin the globe by dragging.\n      </p>\n      \n      <div className=\"map-container-wrapper\">\n        <MapContainer\n          center={[20, 0]}\n          zoom={2}\n          minZoom={2}\n          maxBounds={[[-90, -180], [90, 180]]}\n          scrollWheelZoom={true}\n          className=\"globe-map-container\"\n          ref={mapRef}\n          worldCopyJump={true}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          <MapClickHandler onMapClick={handleMapClick} />\n          \n          {weatherData.map((data) => (\n            <React.Fragment key={data.id}>\n              <Circle\n                center={[data.location.lat, data.location.lng]}\n                radius={50000}\n                pathOptions={{\n                  fillColor: getTemperatureColor(data.weather.temperature),\n                  fillOpacity: 0.5,\n                  color: getTemperatureColor(data.weather.temperature),\n                  weight: 1\n                }}\n              />\n              <Marker\n                position={[data.location.lat, data.location.lng]}\n                icon={getTemperatureIcon(data.weather.temperature)}\n                eventHandlers={{\n                  click: () => {\n                    setSelectedCity(data);\n                  }\n                }}\n              >\n                <Popup>\n                  <div className=\"weather-popup\">\n                    <h3>{data.location.name}</h3>\n                    <div className=\"weather-main\">\n                      <div className=\"temperature\">\n                        <span className=\"temp-value\">{Math.round(data.weather.temperature)}Â°C</span>\n                        <span className=\"feels-like\">Feels like: {Math.round(data.weather.feelsLike)}Â°C</span>\n                      </div>\n                      <div className=\"weather-icon\">\n                        <img \n                          src={`https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`} \n                          alt={data.weather.description}\n                        />\n                        <span>{data.weather.description}</span>\n                      </div>\n                    </div>\n                    <div className=\"weather-details\">\n                      <div className=\"detail\">\n                        <span className=\"label\">Humidity:</span>\n                        <span className=\"value\">{data.weather.humidity}%</span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Pressure:</span>\n                        <span className=\"value\">{data.weather.pressure} hPa</span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Wind:</span>\n                        <span className=\"value\">\n                          {data.wind.speed.toFixed(1)} m/s {getWindDirection(data.wind.direction)}\n                        </span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Updated:</span>\n                        <span className=\"value\">{formatDate(data.timestamp)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </Popup>\n              </Marker>\n            </React.Fragment>\n          ))}\n        </MapContainer>\n      </div>\n      \n      {loading && (\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p>Loading weather data...</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {selectedCity && (\n        <div className=\"selected-city-details\">\n          <h3>Selected Location: {selectedCity.location.name}</h3>\n          <div className=\"weather-card\">\n            <div className=\"weather-header\">\n              <div className=\"temperature-large\">\n                {Math.round(selectedCity.weather.temperature)}Â°C\n                <span className=\"feels-like\">Feels like: {Math.round(selectedCity.weather.feelsLike)}Â°C</span>\n              </div>\n              <div className=\"weather-icon-large\">\n                <img \n                  src={`https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`} \n                  alt={selectedCity.weather.description}\n                />\n                <span>{selectedCity.weather.description}</span>\n              </div>\n            </div>\n            <div className=\"weather-details-grid\">\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð§</span>\n                <span className=\"detail-label\">Humidity</span>\n                <span className=\"detail-value\">{selectedCity.weather.humidity}%</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð¡ï¸</span>\n                <span className=\"detail-label\">Pressure</span>\n                <span className=\"detail-value\">{selectedCity.weather.pressure} hPa</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð¨</span>\n                <span className=\"detail-label\">Wind Speed</span>\n                <span className=\"detail-value\">{selectedCity.wind.speed.toFixed(1)} m/s</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð§­</span>\n                <span className=\"detail-label\">Wind Direction</span>\n                <span className=\"detail-value\">{getWindDirection(selectedCity.wind.direction)}</span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð</span>\n                <span className=\"detail-label\">Coordinates</span>\n                <span className=\"detail-value\">\n                  {selectedCity.location.lat.toFixed(4)}, {selectedCity.location.lng.toFixed(4)}\n                </span>\n              </div>\n              <div className=\"detail-item\">\n                <span className=\"detail-icon\">ð</span>\n                <span className=\"detail-label\">Updated</span>\n                <span className=\"detail-value\">{formatDate(selectedCity.timestamp)}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"temperature-legend\">\n        <h4>Temperature Scale (Â°C)</h4>\n        <div className=\"legend-gradient\">\n          <div className=\"gradient-bar\"></div>\n          <div className=\"gradient-labels\">\n            <span>-10Â°</span>\n            <span>0Â°</span>\n            <span>10Â°</span>\n            <span>20Â°</span>\n            <span>30Â°</span>\n            <span>40Â°+</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalTemperatureMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}