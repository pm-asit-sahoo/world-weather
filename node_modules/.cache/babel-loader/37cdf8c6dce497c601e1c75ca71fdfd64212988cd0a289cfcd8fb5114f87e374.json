{"ast":null,"code":"var _jsxFileName = \"/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = temperature => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({\n  onMapClick\n}) => {\n  _s();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n_s(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c = MapClickHandler;\nconst GlobalTemperatureMap = () => {\n  _s2();\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [highlightedLocation, setHighlightedLocation] = useState(null);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [{\n    name: 'New York',\n    lat: 40.7128,\n    lng: -74.0060\n  }, {\n    name: 'London',\n    lat: 51.5074,\n    lng: -0.1278\n  }, {\n    name: 'Tokyo',\n    lat: 35.6762,\n    lng: 139.6503\n  }, {\n    name: 'Sydney',\n    lat: -33.8688,\n    lng: 151.2093\n  }];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => fetchWeatherForLocation(city.lat, city.lng, city.name));\n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location using real OpenWeatherMap API\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      var _currentWeather$cloud;\n      // OpenWeatherMap API key\n      const apiKey = '4d8fb5b93d4af21d66a2948710284366'; // Free API key for demo purposes\n\n      // Fetch current weather data\n      const weatherResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n\n      // Fetch 5-day forecast data\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`);\n\n      // Process the current weather data\n      const currentWeather = weatherResponse.data;\n\n      // Process the forecast data\n      const forecastData = processForecastData(forecastResponse.data);\n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: cityName || currentWeather.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: currentWeather.main.temp,\n          feelsLike: currentWeather.main.feels_like,\n          humidity: currentWeather.main.humidity,\n          pressure: currentWeather.main.pressure,\n          description: currentWeather.weather[0].description,\n          icon: currentWeather.weather[0].icon,\n          cloudiness: (_currentWeather$cloud = currentWeather.clouds) === null || _currentWeather$cloud === void 0 ? void 0 : _currentWeather$cloud.all,\n          visibility: currentWeather.visibility,\n          rainChance: forecastData.length > 0 ? forecastData[0].rainChance : 0\n        },\n        wind: {\n          speed: currentWeather.wind.speed,\n          direction: currentWeather.wind.deg,\n          gust: currentWeather.wind.gust\n        },\n        sun: {\n          sunrise: new Date(currentWeather.sys.sunrise * 1000).toISOString(),\n          sunset: new Date(currentWeather.sys.sunset * 1000).toISOString()\n        },\n        timestamp: new Date().toISOString(),\n        forecast: forecastData\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      alert('Error fetching real-time weather data. Please try again later.');\n      return null;\n    }\n  };\n\n  // Function to process forecast data from OpenWeatherMap API\n  const processForecastData = forecastData => {\n    // OpenWeatherMap returns forecast in 3-hour intervals\n    // We need to extract one forecast per day\n    const dailyForecasts = [];\n    const processedDays = new Set();\n\n    // Start from tomorrow (index 8 is 24 hours from now in 3-hour intervals)\n    for (let i = 8; i < forecastData.list.length; i += 8) {\n      const forecast = forecastData.list[i];\n      const date = new Date(forecast.dt * 1000);\n      const dateString = date.toISOString().split('T')[0];\n\n      // Skip if we already have a forecast for this day\n      if (processedDays.has(dateString)) continue;\n      processedDays.add(dateString);\n\n      // Find min and max temperatures for the day\n      let minTemp = forecast.main.temp;\n      let maxTemp = forecast.main.temp;\n      let rainChance = 0;\n\n      // Look at all forecasts for this day\n      for (let j = 0; j < forecastData.list.length; j++) {\n        const item = forecastData.list[j];\n        const itemDate = new Date(item.dt * 1000);\n        const itemDateString = itemDate.toISOString().split('T')[0];\n        if (itemDateString === dateString) {\n          minTemp = Math.min(minTemp, item.main.temp);\n          maxTemp = Math.max(maxTemp, item.main.temp);\n\n          // Calculate rain chance based on weather condition\n          if (item.weather[0].main === 'Rain' || item.weather[0].main === 'Drizzle') {\n            rainChance = Math.max(rainChance, 80);\n          } else if (item.weather[0].main === 'Clouds' && item.clouds.all > 60) {\n            rainChance = Math.max(rainChance, 40);\n          } else if (item.weather[0].main === 'Clouds') {\n            rainChance = Math.max(rainChance, 20);\n          }\n        }\n      }\n      dailyForecasts.push({\n        date: dateString,\n        day: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][date.getDay()],\n        temp: {\n          day: forecast.main.temp,\n          night: forecast.main.temp_min,\n          // Approximate\n          min: minTemp,\n          max: maxTemp\n        },\n        weather: forecast.weather[0],\n        humidity: forecast.main.humidity,\n        windSpeed: forecast.wind.speed,\n        rainChance: rainChance\n      });\n\n      // Limit to 5 days\n      if (dailyForecasts.length >= 5) break;\n    }\n    return dailyForecasts;\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n\n        // Set the highlighted location when clicking on the map\n        setHighlightedLocation({\n          lat: lat,\n          lng: lng,\n          name: newWeatherData.location.name\n        });\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = degrees => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = temp => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n\n  // Function to handle search for places using real geocoding API\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    setIsSearching(true);\n    setError(null);\n    try {\n      // Use OpenStreetMap Nominatim API for geocoding\n      const results = await geocodeLocation(searchQuery);\n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n      setIsSearching(false);\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n      setIsSearching(false);\n    }\n  };\n\n  // Real geocoding function using OpenStreetMap Nominatim API\n  const geocodeLocation = async query => {\n    try {\n      // Call the OpenStreetMap Nominatim API\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=5`, {\n        headers: {\n          'User-Agent': 'ClimateChangeApp/1.0' // Required by Nominatim usage policy\n        }\n      });\n\n      // Process and format the results\n      return response.data.map(place => ({\n        id: place.place_id,\n        name: place.name || extractLocationName(place.display_name),\n        country: extractCountry(place.display_name),\n        lat: parseFloat(place.lat),\n        lng: parseFloat(place.lon),\n        display_name: place.display_name\n      }));\n    } catch (error) {\n      console.error('Geocoding error:', error);\n      throw new Error('Failed to search for location');\n    }\n  };\n\n  // Helper function to extract location name from display_name\n  const extractLocationName = displayName => {\n    if (!displayName) return 'Unknown Location';\n    const parts = displayName.split(',');\n    return parts[0].trim();\n  };\n\n  // Helper function to extract country from display_name\n  const extractCountry = displayName => {\n    if (!displayName) return '';\n    const parts = displayName.split(',');\n    return parts[parts.length - 1].trim();\n  };\n\n  // Function to select a search result\n  const selectSearchResult = async result => {\n    setSearchResults([]);\n    setSearchQuery('');\n\n    // Set the highlighted location\n    setHighlightedLocation({\n      lat: result.lat,\n      lng: result.lng,\n      name: result.name\n    });\n\n    // Center map on selected location\n    if (mapRef.current) {\n      mapRef.current.setView([result.lat, result.lng], 10);\n    }\n\n    // Fetch weather for the selected location\n    setLoading(true);\n    try {\n      const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n      if (weatherData) {\n        setWeatherData(prevData => {\n          // Check if we already have weather data for this location\n          const existingIndex = prevData.findIndex(item => Math.abs(item.location.lat - result.lat) < 0.01 && Math.abs(item.location.lng - result.lng) < 0.01);\n          if (existingIndex >= 0) {\n            // Update existing data\n            const updatedData = [...prevData];\n            updatedData[existingIndex] = weatherData;\n            return updatedData;\n          } else {\n            // Add new data\n            return [...prevData, weatherData];\n          }\n        });\n        setSelectedCity(weatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data for search result:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-temperature-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Global Temperature Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for any city, town, district, or place...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"search-button\",\n          disabled: isSearching,\n          children: isSearching ? 'Searching...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-item\",\n          onClick: () => selectSearchResult(result),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-name\",\n            children: result.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-location\",\n            children: result.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this)]\n        }, result.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"map-instructions\",\n      children: \"Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [20, 0],\n        zoom: 2,\n        minZoom: 2,\n        maxBounds: [[-90, -180], [90, 180]],\n        scrollWheelZoom: true,\n        className: \"globe-map-container\",\n        ref: mapRef,\n        worldCopyJump: true,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n          onMapClick: handleMapClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), highlightedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {\n            center: [highlightedLocation.lat, highlightedLocation.lng],\n            radius: 30000,\n            pathOptions: {\n              color: '#ff4500',\n              fillColor: '#ff4500',\n              fillOpacity: 0.3,\n              weight: 2\n            },\n            className: \"pulsing-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: [highlightedLocation.lat, highlightedLocation.lng],\n            radius: 60000,\n            pathOptions: {\n              color: '#ff4500',\n              fillColor: '#ff4500',\n              fillOpacity: 0.1,\n              weight: 1\n            },\n            className: \"pulsing-circle-outer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [highlightedLocation.lat, highlightedLocation.lng],\n            icon: L.divIcon({\n              className: 'highlighted-marker',\n              html: `<div class=\"highlighted-marker-inner\"><span class=\"marker-label\">${highlightedLocation.name}</span></div>`,\n              iconSize: [40, 40],\n              iconAnchor: [20, 20]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this), weatherData.map(data => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Circle, {\n            center: [data.location.lat, data.location.lng],\n            radius: 50000,\n            pathOptions: {\n              fillColor: getTemperatureColor(data.weather.temperature),\n              fillOpacity: 0.5,\n              color: getTemperatureColor(data.weather.temperature),\n              weight: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: [data.location.lat, data.location.lng],\n            icon: getTemperatureIcon(data.weather.temperature),\n            eventHandlers: {\n              click: () => {\n                setSelectedCity(data);\n\n                // Also highlight the location when clicked\n                setHighlightedLocation({\n                  lat: data.location.lat,\n                  lng: data.location.lng,\n                  name: data.location.name\n                });\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weather-popup\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: data.location.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-main\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"temperature\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"temp-value\",\n                      children: [Math.round(data.weather.temperature), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 503,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"feels-like\",\n                      children: [\"Feels like: \", Math.round(data.weather.feelsLike), \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"weather-icon\",\n                    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                      src: `https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`,\n                      alt: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: data.weather.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"weather-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Humidity:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 516,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.weather.humidity, \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 515,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Pressure:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.weather.pressure, \" hPa\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Wind:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: [data.wind.speed.toFixed(1), \" m/s \", getWindDirection(data.wind.direction)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 523,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detail\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"label\",\n                      children: \"Updated:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"value\",\n                      children: formatDate(data.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 529,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }, this), selectedCity && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-city-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Selected Location: \", selectedCity.location.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature-large\",\n            children: [Math.round(selectedCity.weather.temperature), \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"feels-like\",\n              children: [\"Feels like: \", Math.round(selectedCity.weather.feelsLike), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-icon-large\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`,\n              alt: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedCity.weather.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-conditions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-details-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Humidity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.humidity, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83C\\uDF21\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Pressure\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.pressure, \" hPa\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.wind.speed.toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83E\\uDDED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Direction\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: getWindDirection(selectedCity.wind.direction)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this), selectedCity.wind.gust && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCA8\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Wind Gusts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.wind.gust.toFixed(1), \" m/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 19\n            }, this), selectedCity.weather.cloudiness !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\u2601\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Cloudiness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.weather.cloudiness, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 19\n            }, this), selectedCity.weather.visibility !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDC41\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Visibility\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: selectedCity.weather.visibility >= 10000 ? '10+ km' : `${(selectedCity.weather.visibility / 1000).toFixed(1)} km`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 19\n            }, this), selectedCity.weather.rainChance !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83C\\uDF27\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Chance of Rain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [Math.round(selectedCity.weather.rainChance), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this), selectedCity.sun && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-icon\",\n                  children: \"\\uD83C\\uDF05\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Sunrise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: new Date(selectedCity.sun.sunrise).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detail-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-icon\",\n                  children: \"\\uD83C\\uDF07\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-label\",\n                  children: \"Sunset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"detail-value\",\n                  children: new Date(selectedCity.sun.sunset).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDCCD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Coordinates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: [selectedCity.location.lat.toFixed(4), \", \", selectedCity.location.lng.toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-icon\",\n                children: \"\\uD83D\\uDD52\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Updated\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: formatDate(selectedCity.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 13\n        }, this), selectedCity.forecast && selectedCity.forecast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"5-Day Forecast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-container\",\n            children: selectedCity.forecast.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-day\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-date\",\n                children: index === 0 ? 'Tomorrow' : day.day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-icon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://openweathermap.org/img/wn/${day.weather.icon}@2x.png`,\n                  alt: day.weather.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-temp\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"temp-high\",\n                  children: [Math.round(day.temp.max), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"temp-low\",\n                  children: [Math.round(day.temp.min), \"\\xB0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-desc\",\n                children: day.weather.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"forecast-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-icon small\",\n                    children: \"\\uD83D\\uDCA7\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value small\",\n                    children: [day.humidity, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 678,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-icon small\",\n                    children: \"\\uD83D\\uDCA8\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 681,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value small\",\n                    children: [day.windSpeed.toFixed(1), \" m/s\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 682,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"forecast-detail\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-icon small\",\n                    children: \"\\uD83C\\uDF27\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 685,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"detail-value small\",\n                    children: [day.rainChance, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 684,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 23\n              }, this)]\n            }, day.date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"temperature-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Temperature Scale (\\xB0C)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-gradient\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gradient-labels\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"-10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"0\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"10\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"20\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"30\\xB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"40\\xB0+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\n_s2(GlobalTemperatureMap, \"To5E187SotAGZRRnofVPBc/sEu0=\");\n_c2 = GlobalTemperatureMap;\nexport default GlobalTemperatureMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapClickHandler\");\n$RefreshReg$(_c2, \"GlobalTemperatureMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","useMapEvents","Marker","Popup","Circle","L","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","getTemperatureIcon","temperature","color","divIcon","className","html","Math","round","iconSize","iconAnchor","popupAnchor","MapClickHandler","onMapClick","_s","click","e","lat","lng","latlng","_c","GlobalTemperatureMap","_s2","weatherData","setWeatherData","loading","setLoading","error","setError","selectedCity","setSelectedCity","searchQuery","setSearchQuery","searchResults","setSearchResults","isSearching","setIsSearching","highlightedLocation","setHighlightedLocation","mapRef","majorCities","name","fetchInitialWeatherData","promises","map","city","fetchWeatherForLocation","results","Promise","all","filter","data","err","console","cityName","_currentWeather$cloud","apiKey","weatherResponse","get","forecastResponse","currentWeather","forecastData","processForecastData","id","Date","now","random","location","weather","main","temp","feelsLike","feels_like","humidity","pressure","description","icon","cloudiness","clouds","visibility","rainChance","length","wind","speed","direction","deg","gust","sun","sunrise","sys","toISOString","sunset","timestamp","forecast","alert","dailyForecasts","processedDays","Set","i","list","date","dt","dateString","split","has","add","minTemp","maxTemp","j","item","itemDate","itemDateString","min","max","push","day","getDay","night","temp_min","windSpeed","handleMapClick","newWeatherData","prevData","getWindDirection","degrees","directions","index","formatDate","isoString","toLocaleString","getTemperatureColor","handleSearch","preventDefault","trim","geocodeLocation","query","response","encodeURIComponent","headers","place","place_id","extractLocationName","display_name","country","extractCountry","parseFloat","lon","Error","displayName","parts","selectSearchResult","result","current","setView","existingIndex","findIndex","abs","updatedData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","onClick","center","zoom","minZoom","maxBounds","scrollWheelZoom","ref","worldCopyJump","attribution","url","radius","pathOptions","fillColor","fillOpacity","weight","position","eventHandlers","src","alt","toFixed","undefined","toLocaleTimeString","hour","minute","_c2","$RefreshReg$"],"sources":["/Users/asit/CascadeProjects/climate-dashboard-new/src/components/GlobalTemperatureMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, useMapEvents, Marker, Popup, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport '../styles/GlobalTemperatureMap.css';\n\n// Fix for Leaflet marker icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// Custom temperature icon based on temperature value\nconst getTemperatureIcon = (temperature) => {\n  // Define colors based on temperature ranges\n  let color;\n  if (temperature < -10) color = '#0022ff'; // Very cold\n  else if (temperature < 0) color = '#0066ff'; // Cold\n  else if (temperature < 10) color = '#00aaff'; // Cool\n  else if (temperature < 20) color = '#00ffaa'; // Mild\n  else if (temperature < 30) color = '#ffaa00'; // Warm\n  else if (temperature < 40) color = '#ff6600'; // Hot\n  else color = '#ff0000'; // Very hot\n\n  return L.divIcon({\n    className: 'temperature-icon',\n    html: `<div style=\"background-color: ${color}; width: 100%; height: 100%; border-radius: 50%; display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;\">${Math.round(temperature)}Â°</div>`,\n    iconSize: [30, 30],\n    iconAnchor: [15, 15],\n    popupAnchor: [0, -15]\n  });\n};\n\n// Component to handle map clicks and fetch weather data\nconst MapClickHandler = ({ onMapClick }) => {\n  useMapEvents({\n    click: (e) => {\n      const { lat, lng } = e.latlng;\n      onMapClick(lat, lng);\n    }\n  });\n  return null;\n};\n\nconst GlobalTemperatureMap = () => {\n  const [weatherData, setWeatherData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [highlightedLocation, setHighlightedLocation] = useState(null);\n  const mapRef = useRef(null);\n\n  // Major cities with their coordinates for initial display\n  const majorCities = [\n    { name: 'New York', lat: 40.7128, lng: -74.0060 },\n    { name: 'London', lat: 51.5074, lng: -0.1278 },\n    { name: 'Tokyo', lat: 35.6762, lng: 139.6503 },\n    { name: 'Sydney', lat: -33.8688, lng: 151.2093 }\n  ];\n\n  // Fetch weather data for initial cities on component mount\n  useEffect(() => {\n    const fetchInitialWeatherData = async () => {\n      setLoading(true);\n      try {\n        const promises = majorCities.map(city => \n          fetchWeatherForLocation(city.lat, city.lng, city.name)\n        );\n        \n        const results = await Promise.all(promises);\n        setWeatherData(results.filter(data => data !== null));\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching initial weather data:', err);\n        setError('Failed to load initial weather data');\n        setLoading(false);\n      }\n    };\n\n    fetchInitialWeatherData();\n  }, []);\n\n  // Function to fetch weather data for a specific location using real OpenWeatherMap API\n  const fetchWeatherForLocation = async (lat, lng, cityName = null) => {\n    try {\n      // OpenWeatherMap API key\n      const apiKey = '4d8fb5b93d4af21d66a2948710284366'; // Free API key for demo purposes\n      \n      // Fetch current weather data\n      const weatherResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`\n      );\n      \n      // Fetch 5-day forecast data\n      const forecastResponse = await axios.get(\n        `https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lng}&units=metric&appid=${apiKey}`\n      );\n      \n      // Process the current weather data\n      const currentWeather = weatherResponse.data;\n      \n      // Process the forecast data\n      const forecastData = processForecastData(forecastResponse.data);\n      \n      return {\n        id: Date.now() + Math.random(),\n        location: {\n          name: cityName || currentWeather.name,\n          lat: lat,\n          lng: lng\n        },\n        weather: {\n          temperature: currentWeather.main.temp,\n          feelsLike: currentWeather.main.feels_like,\n          humidity: currentWeather.main.humidity,\n          pressure: currentWeather.main.pressure,\n          description: currentWeather.weather[0].description,\n          icon: currentWeather.weather[0].icon,\n          cloudiness: currentWeather.clouds?.all,\n          visibility: currentWeather.visibility,\n          rainChance: forecastData.length > 0 ? forecastData[0].rainChance : 0\n        },\n        wind: {\n          speed: currentWeather.wind.speed,\n          direction: currentWeather.wind.deg,\n          gust: currentWeather.wind.gust\n        },\n        sun: {\n          sunrise: new Date(currentWeather.sys.sunrise * 1000).toISOString(),\n          sunset: new Date(currentWeather.sys.sunset * 1000).toISOString()\n        },\n        timestamp: new Date().toISOString(),\n        forecast: forecastData\n      };\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      alert('Error fetching real-time weather data. Please try again later.');\n      return null;\n    }\n  };\n  \n  // Function to process forecast data from OpenWeatherMap API\n  const processForecastData = (forecastData) => {\n    // OpenWeatherMap returns forecast in 3-hour intervals\n    // We need to extract one forecast per day\n    const dailyForecasts = [];\n    const processedDays = new Set();\n    \n    // Start from tomorrow (index 8 is 24 hours from now in 3-hour intervals)\n    for (let i = 8; i < forecastData.list.length; i += 8) {\n      const forecast = forecastData.list[i];\n      const date = new Date(forecast.dt * 1000);\n      const dateString = date.toISOString().split('T')[0];\n      \n      // Skip if we already have a forecast for this day\n      if (processedDays.has(dateString)) continue;\n      processedDays.add(dateString);\n      \n      // Find min and max temperatures for the day\n      let minTemp = forecast.main.temp;\n      let maxTemp = forecast.main.temp;\n      let rainChance = 0;\n      \n      // Look at all forecasts for this day\n      for (let j = 0; j < forecastData.list.length; j++) {\n        const item = forecastData.list[j];\n        const itemDate = new Date(item.dt * 1000);\n        const itemDateString = itemDate.toISOString().split('T')[0];\n        \n        if (itemDateString === dateString) {\n          minTemp = Math.min(minTemp, item.main.temp);\n          maxTemp = Math.max(maxTemp, item.main.temp);\n          \n          // Calculate rain chance based on weather condition\n          if (item.weather[0].main === 'Rain' || item.weather[0].main === 'Drizzle') {\n            rainChance = Math.max(rainChance, 80);\n          } else if (item.weather[0].main === 'Clouds' && item.clouds.all > 60) {\n            rainChance = Math.max(rainChance, 40);\n          } else if (item.weather[0].main === 'Clouds') {\n            rainChance = Math.max(rainChance, 20);\n          }\n        }\n      }\n      \n      dailyForecasts.push({\n        date: dateString,\n        day: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][date.getDay()],\n        temp: {\n          day: forecast.main.temp,\n          night: forecast.main.temp_min, // Approximate\n          min: minTemp,\n          max: maxTemp\n        },\n        weather: forecast.weather[0],\n        humidity: forecast.main.humidity,\n        windSpeed: forecast.wind.speed,\n        rainChance: rainChance\n      });\n      \n      // Limit to 5 days\n      if (dailyForecasts.length >= 5) break;\n    }\n    \n    return dailyForecasts;\n  };\n\n  // Function to handle map clicks\n  const handleMapClick = async (lat, lng) => {\n    setLoading(true);\n    try {\n      const newWeatherData = await fetchWeatherForLocation(lat, lng);\n      if (newWeatherData) {\n        setWeatherData(prevData => [...prevData, newWeatherData]);\n        setSelectedCity(newWeatherData);\n        \n        // Set the highlighted location when clicking on the map\n        setHighlightedLocation({\n          lat: lat,\n          lng: lng,\n          name: newWeatherData.location.name\n        });\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  // Function to get wind direction as text\n  const getWindDirection = (degrees) => {\n    const directions = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW'];\n    const index = Math.round(degrees / 45) % 8;\n    return directions[index];\n  };\n\n  // Function to format date\n  const formatDate = (isoString) => {\n    const date = new Date(isoString);\n    return date.toLocaleString();\n  };\n\n  // Function to get temperature color for the circle overlay\n  const getTemperatureColor = (temp) => {\n    if (temp < -10) return '#0022ff';\n    if (temp < 0) return '#0066ff';\n    if (temp < 10) return '#00aaff';\n    if (temp < 20) return '#00ffaa';\n    if (temp < 30) return '#ffaa00';\n    if (temp < 40) return '#ff6600';\n    return '#ff0000';\n  };\n\n  // Function to handle search for places using real geocoding API\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!searchQuery.trim()) return;\n    \n    setIsSearching(true);\n    setError(null);\n    \n    try {\n      // Use OpenStreetMap Nominatim API for geocoding\n      const results = await geocodeLocation(searchQuery);\n      \n      if (results.length === 0) {\n        setError(`No results found for \"${searchQuery}\". Try a different search term.`);\n      } else {\n        setSearchResults(results);\n      }\n      \n      setIsSearching(false);\n    } catch (err) {\n      console.error('Error searching for location:', err);\n      setError('Failed to search for this location. Please try again.');\n      setIsSearching(false);\n    }\n  };\n  \n  // Real geocoding function using OpenStreetMap Nominatim API\n  const geocodeLocation = async (query) => {\n    try {\n      // Call the OpenStreetMap Nominatim API\n      const response = await axios.get(\n        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=5`,\n        {\n          headers: {\n            'User-Agent': 'ClimateChangeApp/1.0' // Required by Nominatim usage policy\n          }\n        }\n      );\n      \n      // Process and format the results\n      return response.data.map(place => ({\n        id: place.place_id,\n        name: place.name || extractLocationName(place.display_name),\n        country: extractCountry(place.display_name),\n        lat: parseFloat(place.lat),\n        lng: parseFloat(place.lon),\n        display_name: place.display_name\n      }));\n    } catch (error) {\n      console.error('Geocoding error:', error);\n      throw new Error('Failed to search for location');\n    }\n  };\n  \n  // Helper function to extract location name from display_name\n  const extractLocationName = (displayName) => {\n    if (!displayName) return 'Unknown Location';\n    const parts = displayName.split(',');\n    return parts[0].trim();\n  };\n  \n  // Helper function to extract country from display_name\n  const extractCountry = (displayName) => {\n    if (!displayName) return '';\n    const parts = displayName.split(',');\n    return parts[parts.length - 1].trim();\n  };\n  \n  // Function to select a search result\n  const selectSearchResult = async (result) => {\n    setSearchResults([]);\n    setSearchQuery('');\n    \n    // Set the highlighted location\n    setHighlightedLocation({\n      lat: result.lat,\n      lng: result.lng,\n      name: result.name\n    });\n    \n    // Center map on selected location\n    if (mapRef.current) {\n      mapRef.current.setView([result.lat, result.lng], 10);\n    }\n    \n    // Fetch weather for the selected location\n    setLoading(true);\n    try {\n      const weatherData = await fetchWeatherForLocation(result.lat, result.lng, result.name);\n      if (weatherData) {\n        setWeatherData(prevData => {\n          // Check if we already have weather data for this location\n          const existingIndex = prevData.findIndex(item => \n            Math.abs(item.location.lat - result.lat) < 0.01 && \n            Math.abs(item.location.lng - result.lng) < 0.01\n          );\n          \n          if (existingIndex >= 0) {\n            // Update existing data\n            const updatedData = [...prevData];\n            updatedData[existingIndex] = weatherData;\n            return updatedData;\n          } else {\n            // Add new data\n            return [...prevData, weatherData];\n          }\n        });\n        setSelectedCity(weatherData);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching weather data for search result:', err);\n      setError('Failed to load weather data for this location');\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"global-temperature-map\">\n      <h2>Global Temperature Map</h2>\n      \n      <div className=\"search-container\">\n        <form onSubmit={handleSearch}>\n          <input\n            type=\"text\"\n            placeholder=\"Search for any city, town, district, or place...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"search-input\"\n          />\n          <button type=\"submit\" className=\"search-button\" disabled={isSearching}>\n            {isSearching ? 'Searching...' : 'Search'}\n          </button>\n        </form>\n        \n        {searchResults.length > 0 && (\n          <div className=\"search-results\">\n            {searchResults.map(result => (\n              <div \n                key={result.id} \n                className=\"search-result-item\"\n                onClick={() => selectSearchResult(result)}\n              >\n                <div className=\"result-name\">{result.name}</div>\n                <div className=\"result-location\">{result.display_name}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      \n      <p className=\"map-instructions\">\n        Search for any place or click anywhere on the map to see current weather conditions. Spin the globe by dragging.\n      </p>\n      \n      <div className=\"map-container-wrapper\">\n        <MapContainer\n          center={[20, 0]}\n          zoom={2}\n          minZoom={2}\n          maxBounds={[[-90, -180], [90, 180]]}\n          scrollWheelZoom={true}\n          className=\"globe-map-container\"\n          ref={mapRef}\n          worldCopyJump={true}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          <MapClickHandler onMapClick={handleMapClick} />\n          \n          {highlightedLocation && (\n            <div>\n              <Circle\n                center={[highlightedLocation.lat, highlightedLocation.lng]}\n                radius={30000}\n                pathOptions={{\n                  color: '#ff4500',\n                  fillColor: '#ff4500',\n                  fillOpacity: 0.3,\n                  weight: 2\n                }}\n                className=\"pulsing-circle\"\n              />\n              <Circle\n                center={[highlightedLocation.lat, highlightedLocation.lng]}\n                radius={60000}\n                pathOptions={{\n                  color: '#ff4500',\n                  fillColor: '#ff4500',\n                  fillOpacity: 0.1,\n                  weight: 1\n                }}\n                className=\"pulsing-circle-outer\"\n              />\n              <Marker\n                position={[highlightedLocation.lat, highlightedLocation.lng]}\n                icon={L.divIcon({\n                  className: 'highlighted-marker',\n                  html: `<div class=\"highlighted-marker-inner\"><span class=\"marker-label\">${highlightedLocation.name}</span></div>`,\n                  iconSize: [40, 40],\n                  iconAnchor: [20, 20]\n                })}\n              />\n            </div>\n          )}\n          \n          {weatherData.map((data) => (\n            <React.Fragment key={data.id}>\n              <Circle\n                center={[data.location.lat, data.location.lng]}\n                radius={50000}\n                pathOptions={{\n                  fillColor: getTemperatureColor(data.weather.temperature),\n                  fillOpacity: 0.5,\n                  color: getTemperatureColor(data.weather.temperature),\n                  weight: 1\n                }}\n              />\n              <Marker\n                position={[data.location.lat, data.location.lng]}\n                icon={getTemperatureIcon(data.weather.temperature)}\n                eventHandlers={{\n                  click: () => {\n                    setSelectedCity(data);\n                    \n                    // Also highlight the location when clicked\n                    setHighlightedLocation({\n                      lat: data.location.lat,\n                      lng: data.location.lng,\n                      name: data.location.name\n                    });\n                  }\n                }}\n              >\n                <Popup>\n                  <div className=\"weather-popup\">\n                    <h3>{data.location.name}</h3>\n                    <div className=\"weather-main\">\n                      <div className=\"temperature\">\n                        <span className=\"temp-value\">{Math.round(data.weather.temperature)}Â°C</span>\n                        <span className=\"feels-like\">Feels like: {Math.round(data.weather.feelsLike)}Â°C</span>\n                      </div>\n                      <div className=\"weather-icon\">\n                        <img \n                          src={`https://openweathermap.org/img/wn/${data.weather.icon}@2x.png`} \n                          alt={data.weather.description}\n                        />\n                        <span>{data.weather.description}</span>\n                      </div>\n                    </div>\n                    <div className=\"weather-details\">\n                      <div className=\"detail\">\n                        <span className=\"label\">Humidity:</span>\n                        <span className=\"value\">{data.weather.humidity}%</span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Pressure:</span>\n                        <span className=\"value\">{data.weather.pressure} hPa</span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Wind:</span>\n                        <span className=\"value\">\n                          {data.wind.speed.toFixed(1)} m/s {getWindDirection(data.wind.direction)}\n                        </span>\n                      </div>\n                      <div className=\"detail\">\n                        <span className=\"label\">Updated:</span>\n                        <span className=\"value\">{formatDate(data.timestamp)}</span>\n                      </div>\n                    </div>\n                  </div>\n                </Popup>\n              </Marker>\n            </React.Fragment>\n          ))}\n        </MapContainer>\n      </div>\n      \n      {loading && (\n        <div className=\"loading-indicator\">\n          <div className=\"spinner\"></div>\n          <p>Loading weather data...</p>\n        </div>\n      )}\n      \n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n      \n      {selectedCity && (\n        <div className=\"selected-city-details\">\n          <h3>Selected Location: {selectedCity.location.name}</h3>\n          <div className=\"weather-card\">\n            <div className=\"weather-header\">\n              <div className=\"temperature-large\">\n                {Math.round(selectedCity.weather.temperature)}Â°C\n                <span className=\"feels-like\">Feels like: {Math.round(selectedCity.weather.feelsLike)}Â°C</span>\n              </div>\n              <div className=\"weather-icon-large\">\n                <img \n                  src={`https://openweathermap.org/img/wn/${selectedCity.weather.icon}@2x.png`} \n                  alt={selectedCity.weather.description}\n                />\n                <span>{selectedCity.weather.description}</span>\n              </div>\n            </div>\n            \n            <div className=\"current-conditions\">\n              <h4>Current Conditions</h4>\n              <div className=\"weather-details-grid\">\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð§</span>\n                  <span className=\"detail-label\">Humidity</span>\n                  <span className=\"detail-value\">{selectedCity.weather.humidity}%</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð¡ï¸</span>\n                  <span className=\"detail-label\">Pressure</span>\n                  <span className=\"detail-value\">{selectedCity.weather.pressure} hPa</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð¨</span>\n                  <span className=\"detail-label\">Wind Speed</span>\n                  <span className=\"detail-value\">{selectedCity.wind.speed.toFixed(1)} m/s</span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð§­</span>\n                  <span className=\"detail-label\">Wind Direction</span>\n                  <span className=\"detail-value\">{getWindDirection(selectedCity.wind.direction)}</span>\n                </div>\n                {selectedCity.wind.gust && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-icon\">ð¨</span>\n                    <span className=\"detail-label\">Wind Gusts</span>\n                    <span className=\"detail-value\">{selectedCity.wind.gust.toFixed(1)} m/s</span>\n                  </div>\n                )}\n                {selectedCity.weather.cloudiness !== undefined && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-icon\">âï¸</span>\n                    <span className=\"detail-label\">Cloudiness</span>\n                    <span className=\"detail-value\">{selectedCity.weather.cloudiness}%</span>\n                  </div>\n                )}\n                {selectedCity.weather.visibility !== undefined && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-icon\">ðï¸</span>\n                    <span className=\"detail-label\">Visibility</span>\n                    <span className=\"detail-value\">\n                      {selectedCity.weather.visibility >= 10000 \n                        ? '10+ km' \n                        : `${(selectedCity.weather.visibility / 1000).toFixed(1)} km`}\n                    </span>\n                  </div>\n                )}\n                {selectedCity.weather.rainChance !== undefined && (\n                  <div className=\"detail-item\">\n                    <span className=\"detail-icon\">ð§ï¸</span>\n                    <span className=\"detail-label\">Chance of Rain</span>\n                    <span className=\"detail-value\">{Math.round(selectedCity.weather.rainChance)}%</span>\n                  </div>\n                )}\n                {selectedCity.sun && (\n                  <>\n                    <div className=\"detail-item\">\n                      <span className=\"detail-icon\">ð</span>\n                      <span className=\"detail-label\">Sunrise</span>\n                      <span className=\"detail-value\">{new Date(selectedCity.sun.sunrise).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</span>\n                    </div>\n                    <div className=\"detail-item\">\n                      <span className=\"detail-icon\">ð</span>\n                      <span className=\"detail-label\">Sunset</span>\n                      <span className=\"detail-value\">{new Date(selectedCity.sun.sunset).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}</span>\n                    </div>\n                  </>\n                )}\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð</span>\n                  <span className=\"detail-label\">Coordinates</span>\n                  <span className=\"detail-value\">\n                    {selectedCity.location.lat.toFixed(4)}, {selectedCity.location.lng.toFixed(4)}\n                  </span>\n                </div>\n                <div className=\"detail-item\">\n                  <span className=\"detail-icon\">ð</span>\n                  <span className=\"detail-label\">Updated</span>\n                  <span className=\"detail-value\">{formatDate(selectedCity.timestamp)}</span>\n                </div>\n              </div>\n            </div>\n            \n            {selectedCity.forecast && selectedCity.forecast.length > 0 && (\n              <div className=\"forecast-section\">\n                <h4>5-Day Forecast</h4>\n                <div className=\"forecast-container\">\n                  {selectedCity.forecast.map((day, index) => (\n                    <div key={day.date} className=\"forecast-day\">\n                      <div className=\"forecast-date\">{index === 0 ? 'Tomorrow' : day.day}</div>\n                      <div className=\"forecast-icon\">\n                        <img \n                          src={`https://openweathermap.org/img/wn/${day.weather.icon}@2x.png`} \n                          alt={day.weather.description}\n                        />\n                      </div>\n                      <div className=\"forecast-temp\">\n                        <span className=\"temp-high\">{Math.round(day.temp.max)}Â°</span>\n                        <span className=\"temp-low\">{Math.round(day.temp.min)}Â°</span>\n                      </div>\n                      <div className=\"forecast-desc\">{day.weather.description}</div>\n                      <div className=\"forecast-details\">\n                        <div className=\"forecast-detail\">\n                          <span className=\"detail-icon small\">ð§</span>\n                          <span className=\"detail-value small\">{day.humidity}%</span>\n                        </div>\n                        <div className=\"forecast-detail\">\n                          <span className=\"detail-icon small\">ð¨</span>\n                          <span className=\"detail-value small\">{day.windSpeed.toFixed(1)} m/s</span>\n                        </div>\n                        <div className=\"forecast-detail\">\n                          <span className=\"detail-icon small\">ð§ï¸</span>\n                          <span className=\"detail-value small\">{day.rainChance}%</span>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      \n      <div className=\"temperature-legend\">\n        <h4>Temperature Scale (Â°C)</h4>\n        <div className=\"legend-gradient\">\n          <div className=\"gradient-bar\"></div>\n          <div className=\"gradient-labels\">\n            <span>-10Â°</span>\n            <span>0Â°</span>\n            <span>10Â°</span>\n            <span>20Â°</span>\n            <span>30Â°</span>\n            <span>40Â°+</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalTemperatureMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}